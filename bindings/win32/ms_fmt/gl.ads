--
 -- GL.ads formatted for ObjectAda Special Edition (max 2000 lines)
 -- File generated through Compact_GL.ads_for_OA_SE.bat command
 -- from the GCC file. It is useless to edit the present file.
 --
WITH INTERFACES.C;WITH ADA.UNCHECKED_CONVERSION;PACKAGE GL IS PACKAGE C RENAMES INTERFACES.C;MESA_MAJOR_VERSION:CONSTANT :=2;MESA_MINOR_VERSION:CONSTANT :=5;
VERSION_1_1:CONSTANT :=1;EXT_BLEND_COLOR:CONSTANT :=1;EXT_BLEND_LOGIC_OP:CONSTANT :=1;EXT_BLEND_MINMAX:CONSTANT :=1;EXT_BLEND_SUBTRACT:CONSTANT :=1;
EXT_POLYGON_OFFSET:CONSTANT :=1;EXT_VERTEX_ARRAY:CONSTANT :=1;EXT_TEXTURE_OBJECT:CONSTANT :=1;EXT_TEXTURE3D:CONSTANT :=1;EXT_PALETTED_TEXTURE:CONSTANT :=1;
EXT_SHARED_TEXTURE_PALETTE:CONSTANT :=1;EXT_POINT_PARAMETERS:CONSTANT :=1;MESA_WINDOW_POS:CONSTANT :=1;MESA_RESIZE_BUFFERS:CONSTANT :=1;CURRENT_BIT:CONSTANT :=16#00000001#;
POINT_BIT:CONSTANT :=16#00000002#;LINE_BIT:CONSTANT :=16#00000004#;POLYGON_BIT:CONSTANT :=16#00000008#;POLYGON_STIPPLE_BIT:CONSTANT :=16#00000010#;
PIXEL_MODE_BIT:CONSTANT :=16#00000020#;LIGHTING_BIT:CONSTANT :=16#00000040#;FOG_BIT:CONSTANT :=16#00000080#;DEPTH_BUFFER_BIT:CONSTANT :=16#00000100#;
ACCUM_BUFFER_BIT:CONSTANT :=16#00000200#;STENCIL_BUFFER_BIT:CONSTANT :=16#00000400#;VIEWPORT_BIT:CONSTANT :=16#00000800#;TRANSFORM_BIT:CONSTANT :=16#00001000#;
ENABLE_BIT:CONSTANT :=16#00002000#;COLOR_BUFFER_BIT:CONSTANT :=16#00004000#;HINT_BIT:CONSTANT :=16#00008000#;EVAL_BIT:CONSTANT :=16#00010000#;
LIST_BIT:CONSTANT :=16#00020000#;TEXTURE_BIT:CONSTANT :=16#00040000#;SCISSOR_BIT:CONSTANT :=16#00080000#;ALL_ATTRIB_BITS:CONSTANT :=16#000FFFFF#;
CLIENT_PIXEL_STORE_BIT:CONSTANT :=16#00000001#;CLIENT_VERTEX_ARRAY_BIT:CONSTANT :=16#00000002#;CLIENT_ALL_ATTRIB_BITS:CONSTANT :=16#0000FFFF#;
TYPE BITFIELD IS NEW C.UNSIGNED;TYPE GL_BOOLEAN IS NEW C.UNSIGNED_CHAR;TYPE BYTE IS NEW C.CHAR;TYPE SHORT IS NEW C.SHORT;TYPE INT IS NEW C.INT;
TYPE UBYTE IS NEW C.UNSIGNED_CHAR;TYPE USHORT IS NEW C.UNSIGNED_SHORT;TYPE UINT IS NEW C.UNSIGNED;TYPE SIZEI IS NEW C.INT;TYPE FLOAT IS NEW C.C_FLOAT;
TYPE CLAMPF IS NEW C.C_FLOAT;TYPE DOUBLE IS NEW C.DOUBLE;TYPE CLAMPD IS NEW C.DOUBLE;TYPE POSITIVE_UINT IS NEW GL.UINT RANGE 1 .. GL.UINT'LAST;
TYPE GL_BOOLEANPTR IS ACCESS ALL GL_BOOLEAN;TYPE BYTEPTR IS ACCESS ALL BYTE;TYPE SHORTPTR IS ACCESS ALL SHORT;TYPE INTPOINTER IS ACCESS ALL INT;
TYPE UBYTEPTR IS ACCESS ALL UBYTE;TYPE USHORTPTR IS ACCESS ALL USHORT;TYPE UINTPTR IS ACCESS ALL UINT;TYPE FLOATPTR IS ACCESS ALL GL.FLOAT;
TYPE CLAMPFPTR IS ACCESS ALL CLAMPF;TYPE DOUBLEPTR IS ACCESS ALL DOUBLE;SUBTYPE SIZEIPTR IS INTERFACES.C.PTRDIFF_T;SUBTYPE INTPTR IS INTERFACES.C.PTRDIFF_T;
TYPE POINTER IS ACCESS ALL UBYTE;TYPE LIGHT_FLOAT_VECTOR IS ARRAY (0 .. 3)OF ALIASED GL.FLOAT;TYPE MATERIAL_FLOAT_VECTOR IS ARRAY (0 .. 3)OF ALIASED GL.FLOAT;
TYPE DOUBLE_VECTOR_3D IS ARRAY (0 .. 2)OF ALIASED GL.DOUBLE;TYPE RGB_COLOR IS RECORD RED, GREEN, BLUE:GL.DOUBLE;END RECORD;TYPE RGBA_COLOR IS RECORD RED, GREEN, BLUE, ALPHA:GL.DOUBLE;END RECORD;
TYPE COLOR_ACCESS IS ACCESS ALL GL.RGB_COLOR;FUNCTION TO_POINTER IS NEW ADA.UNCHECKED_CONVERSION (COLOR_ACCESS, GL.POINTER);TYPE DOUBLE_ACCESS IS ACCESS ALL GL.DOUBLE;
FUNCTION TO_POINTER IS NEW ADA.UNCHECKED_CONVERSION (DOUBLE_ACCESS, GL.POINTER);TYPE NATURAL_ACCESS IS ACCESS ALL NATURAL;FUNCTION TO_POINTER IS NEW ADA.UNCHECKED_CONVERSION (NATURAL_ACCESS, GL.POINTER);
FUNCTION TO_POINTER IS NEW ADA.UNCHECKED_CONVERSION (UINTPTR, GL.POINTER);FUNCTION TO_POINTER IS NEW ADA.UNCHECKED_CONVERSION (USHORTPTR, GL.POINTER);
TYPE ENUM IS NEW C.UNSIGNED;GL_FALSE:CONSTANT GL_BOOLEAN :=GL_BOOLEAN'VAL (0);GL_TRUE:CONSTANT GL_BOOLEAN :=GL_BOOLEAN'VAL (1);TYPE GETPOINTERENM IS
 (FEEDBACK_BUFFER_POINTER, VERTEX_ARRAY_POINTER, NORMAL_ARRAY_POINTER, COLOR_ARRAY_POINTER, INDEX_ARRAY_POINTER, TEXTURE_COORD_ARRAY_POINTER,
EDGE_FLAG_ARRAY_POINTER, SELECTION_BUFFER_POINTER);FOR GETPOINTERENM USE (FEEDBACK_BUFFER_POINTER =>16#0DF0#, VERTEX_ARRAY_POINTER =>16#808E#,
NORMAL_ARRAY_POINTER =>16#808F#, COLOR_ARRAY_POINTER =>16#8090#, INDEX_ARRAY_POINTER =>16#8091#, TEXTURE_COORD_ARRAY_POINTER =>16#8092#, EDGE_FLAG_ARRAY_POINTER =>16#8093#,
SELECTION_BUFFER_POINTER =>16#FFFF#);FOR GETPOINTERENM'SIZE USE GL.ENUM'SIZE;PROCEDURE GETPOINTERV (PNAME:GETPOINTERENM;PARAMS:GL.POINTER);
TYPE FUNCENM IS (NEVER, LESS, EQUAL, LEQUAL, GREATER, NOTEQUAL, GEQUAL, ALWAYS);FOR FUNCENM USE (NEVER =>16#0200#, LESS =>16#0201#, EQUAL =>16#0202#,
LEQUAL =>16#0203#, GREATER =>16#0204#, NOTEQUAL =>16#0205#, GEQUAL =>16#0206#, ALWAYS =>16#0207#);FOR FUNCENM'SIZE USE GL.ENUM'SIZE;PROCEDURE ALPHAFUNC (FUNC:FUNCENM;
REF:GL.CLAMPF);PROCEDURE DEPTHFUNC (FUNC:FUNCENM);PROCEDURE STENCILFUNC (FUNC:FUNCENM;REF:GL.INT;MASK:GL.UINT);TYPE STENCILOPENM IS (ZERO,
INVERT, KEEP, REPLACE, INCR, DECR);FOR STENCILOPENM USE (ZERO =>16#0000#, INVERT =>16#150A#, KEEP =>16#1E00#, REPLACE =>16#1E01#, INCR =>16#1E02#,
DECR =>16#1E03#);FOR STENCILOPENM'SIZE USE GL.ENUM'SIZE;PROCEDURE STENCILOP (FAIL:STENCILOPENM;ZFAIL:STENCILOPENM;ZPASS:STENCILOPENM);TYPE BLENDSRCENM IS
 (ZERO, ONE, SRC_ALPHA, ONE_MINUS_SRC_ALPHA, DST_ALPHA, ONE_MINUS_DST_ALPHA, DST_COLOR, ONE_MINUS_DST_COLOR, SRC_ALPHA_SATURATE, CONSTANT_COLOR,
ONE_MINUS_CONSTANT_COLOR, CONSTANT_ALPHA, ONE_MINUS_CONSTANT_ALPHA);FOR BLENDSRCENM USE (ZERO =>16#0000#, ONE =>16#0001#, SRC_ALPHA =>16#0302#,
ONE_MINUS_SRC_ALPHA =>16#0303#, DST_ALPHA =>16#0304#, ONE_MINUS_DST_ALPHA =>16#0305#, DST_COLOR =>16#0306#, ONE_MINUS_DST_COLOR =>16#0307#, SRC_ALPHA_SATURATE =>16#0308#,
CONSTANT_COLOR =>16#8001#, ONE_MINUS_CONSTANT_COLOR =>16#8002#, CONSTANT_ALPHA =>16#8003#, ONE_MINUS_CONSTANT_ALPHA =>16#8004#);FOR BLENDSRCENM'SIZE USE GL.ENUM'SIZE;
TYPE BLENDDSTENM IS (ZERO, ONE, SRC_COLOR, ONE_MINUS_SRC_COLOR, SRC_ALPHA, ONE_MINUS_SRC_ALPHA, DST_ALPHA, ONE_MINUS_DST_ALPHA);FOR BLENDDSTENM USE
 (ZERO =>16#0000#, ONE =>16#0001#, SRC_COLOR =>16#0300#, ONE_MINUS_SRC_COLOR =>16#0301#, SRC_ALPHA =>16#0302#, ONE_MINUS_SRC_ALPHA =>16#0303#, DST_ALPHA =>16#0304#,
ONE_MINUS_DST_ALPHA =>16#0305#);FOR BLENDDSTENM'SIZE USE GL.ENUM'SIZE;TYPE BLENDEQUATIONENM IS (LOGIC_OP, FUNC_ADD_EXT, MIN_EXT, MAX_EXT,
FUNC_SUBTRACT_EXT, FUNC_REVERSE_SUBTRACT_EXT);FOR BLENDEQUATIONENM USE (LOGIC_OP =>16#0BF1#, FUNC_ADD_EXT =>16#8006#, MIN_EXT =>16#8007#, MAX_EXT =>16#8008#,
FUNC_SUBTRACT_EXT =>16#800A#, FUNC_REVERSE_SUBTRACT_EXT =>16#800B#);FOR BLENDEQUATIONENM'SIZE USE GL.ENUM'SIZE;PROCEDURE BLENDFUNC (SFACTOR:BLENDSRCENM;
DFACTOR:BLENDDSTENM);PROCEDURE BLENDEQUATIONEXT (MODE:BLENDEQUATIONENM);PROCEDURE BLENDCOLOREXT (RED:GL.CLAMPF;GREEN:GL.CLAMPF;BLUE:GL.CLAMPF;
ALPHA:GL.CLAMPF);TYPE LOGICOPENM IS (CLEAR, GL_AND, AND_REVERSE, COPY, AND_INVERTED, NOOP, GL_XOR, GL_OR, NOR, EQUIV, INVERT, OR_REVERSE, COPY_INVERTED,
OR_INVERTED, NAND, SET);FOR LOGICOPENM USE (CLEAR =>16#1500#, GL_AND =>16#1501#, AND_REVERSE =>16#1502#, COPY =>16#1503#, AND_INVERTED =>16#1504#,
NOOP =>16#1505#, GL_XOR =>16#1506#, GL_OR =>16#1507#, NOR =>16#1508#, EQUIV =>16#1509#, INVERT =>16#150A#, OR_REVERSE =>16#150B#, COPY_INVERTED =>16#150C#,
OR_INVERTED =>16#150D#, NAND =>16#150E#, SET =>16#150F#);FOR LOGICOPENM'SIZE USE GL.ENUM'SIZE;PROCEDURE LOGICOP (OPCODE:LOGICOPENM);TYPE FACEENM IS
 (FRONT, BACK, FRONT_AND_BACK);FOR FACEENM USE (FRONT =>16#0404#, BACK =>16#0405#, FRONT_AND_BACK =>16#0408#);FOR FACEENM'SIZE USE GL.ENUM'SIZE;
PROCEDURE CULLFACE (MODE:FACEENM);TYPE ORIENTATIONENM IS (CW, CCW);FOR ORIENTATIONENM USE (CW =>16#0900#, CCW =>16#0901#);FOR ORIENTATIONENM'SIZE USE GL.ENUM'SIZE;
PROCEDURE FRONTFACE (MODE:ORIENTATIONENM);TYPE POLYGONMODEENM IS (POINT, LINE, FILL);FOR POLYGONMODEENM USE (POINT =>16#1B00#, LINE =>16#1B01#,
FILL =>16#1B02#);FOR POLYGONMODEENM'SIZE USE GL.ENUM'SIZE;PROCEDURE POLYGONMODE (FACE:FACEENM;MODE:POLYGONMODEENM);TYPE CLIPPLANEENM IS
 (CLIP_PLANE0, CLIP_PLANE1, CLIP_PLANE2, CLIP_PLANE3, CLIP_PLANE4, CLIP_PLANE5);FOR CLIPPLANEENM USE (CLIP_PLANE0 =>16#3000#, CLIP_PLANE1 =>16#3001#,
CLIP_PLANE2 =>16#3002#, CLIP_PLANE3 =>16#3003#, CLIP_PLANE4 =>16#3004#, CLIP_PLANE5 =>16#3005#);FOR CLIPPLANEENM'SIZE USE GL.ENUM'SIZE;PROCEDURE CLIPPLANE (PLANE:CLIPPLANEENM;
EQUATION:GL.DOUBLEPTR);PROCEDURE GETCLIPPLANE (PLANE:CLIPPLANEENM;EQUATION:GL.DOUBLEPTR);TYPE DRAWBUFFERENM IS (NONE, FRONT_LEFT, FRONT_RIGHT,
BACK_LEFT, BACK_RIGHT, FRONT, BACK, LEFT, RIGHT, FRONT_AND_BACK, AUX0, AUX1, AUX2, AUX3);FOR DRAWBUFFERENM USE (NONE =>16#0000#, FRONT_LEFT =>16#0400#,
FRONT_RIGHT =>16#0401#, BACK_LEFT =>16#0402#, BACK_RIGHT =>16#0403#, FRONT =>16#0404#, BACK =>16#0405#, LEFT =>16#0406#, RIGHT =>16#0407#, FRONT_AND_BACK =>16#0408#,
AUX0 =>16#0409#, AUX1 =>16#040A#, AUX2 =>16#040B#, AUX3 =>16#040C#);FOR DRAWBUFFERENM'SIZE USE GL.ENUM'SIZE;PROCEDURE DRAWBUFFER (MODE:DRAWBUFFERENM);
TYPE READBUFFERENM IS (FRONT_LEFT, FRONT_RIGHT, BACK_LEFT, BACK_RIGHT, FRONT, BACK, LEFT, RIGHT, AUX0, AUX1, AUX2, AUX3);FOR READBUFFERENM USE (
FRONT_LEFT =>16#0400#, FRONT_RIGHT =>16#0401#, BACK_LEFT =>16#0402#, BACK_RIGHT =>16#0403#, FRONT =>16#0404#, BACK =>16#0405#, LEFT =>16#0406#, RIGHT =>16#0407#,
AUX0 =>16#0409#, AUX1 =>16#040A#, AUX2 =>16#040B#, AUX3 =>16#040C#);FOR READBUFFERENM'SIZE USE GL.ENUM'SIZE;PROCEDURE READBUFFER (MODE:READBUFFERENM);
TYPE SERVERCAPABILITYENM IS (POINT_SMOOTH, LINE_SMOOTH, LINE_STIPPLE, POLYGON_SMOOTH, POLYGON_STIPPLE, CULL_FACE, LIGHTING, COLOR_MATERIAL, FOG,
DEPTH_TEST, STENCIL_TEST, NORMALIZE, ALPHA_TEST, DITHER, BLEND, INDEX_LOGIC_OP, COLOR_LOGIC_OP, SCISSOR_TEST, TEXTURE_GEN_S, TEXTURE_GEN_T, TEXTURE_GEN_R,
TEXTURE_GEN_Q, AUTO_NORMAL, MAP1_COLOR_4, MAP1_INDEX, MAP1_NORMAL, MAP1_TEXTURE_COORD_1, MAP1_TEXTURE_COORD_2, MAP1_TEXTURE_COORD_3, MAP1_TEXTURE_COORD_4,
MAP1_VERTEX_3, MAP1_VERTEX_4, MAP2_COLOR_4, MAP2_INDEX, MAP2_NORMAL, MAP2_TEXTURE_COORD_1, MAP2_TEXTURE_COORD_2, MAP2_TEXTURE_COORD_3, MAP2_TEXTURE_COORD_4,
MAP2_VERTEX_3, MAP2_VERTEX_4, TEXTURE_1D, TEXTURE_2D, POLYGON_OFFSET_POINT, POLYGON_OFFSET_LINE, CLIP_PLANE0, CLIP_PLANE1, CLIP_PLANE2, CLIP_PLANE3,
CLIP_PLANE4, CLIP_PLANE5, LIGHT0, LIGHT1, LIGHT2, LIGHT3, LIGHT4, LIGHT5, LIGHT6, LIGHT7, POLYGON_OFFSET_FILL, TEXTURE_3D_EXT, MULTISAMPLE_ARB, SAMPLE_ALPHA_TO_COVERAGE_ARB,
SAMPLE_ALPHA_TO_ONE_ARB, SAMPLE_COVERAGE_ARB, SAMPLE_BUFFERS_ARB, SAMPLES_ARB, SAMPLE_COVERAGE_VALUE_ARB, SAMPLE_COVERAGE_INVERT_ARB, MULTISAMPLE_BIT_ARB
);FOR SERVERCAPABILITYENM USE (POINT_SMOOTH =>16#0B10#, LINE_SMOOTH =>16#0B20#, LINE_STIPPLE =>16#0B24#, POLYGON_SMOOTH =>16#0B41#, POLYGON_STIPPLE =>16#0B42#,
CULL_FACE =>16#0B44#, LIGHTING =>16#0B50#, COLOR_MATERIAL =>16#0B57#, FOG =>16#0B60#, DEPTH_TEST =>16#0B71#, STENCIL_TEST =>16#0B90#, NORMALIZE =>16#0BA1#,
ALPHA_TEST =>16#0BC0#, DITHER =>16#0BD0#, BLEND =>16#0BE2#, INDEX_LOGIC_OP =>16#0BF1#, COLOR_LOGIC_OP =>16#0BF2#, SCISSOR_TEST =>16#0C11#, TEXTURE_GEN_S =>16#0C60#,
TEXTURE_GEN_T =>16#0C61#, TEXTURE_GEN_R =>16#0C62#, TEXTURE_GEN_Q =>16#0C63#, AUTO_NORMAL =>16#0D80#, MAP1_COLOR_4 =>16#0D90#, MAP1_INDEX =>16#0D91#,
MAP1_NORMAL =>16#0D92#, MAP1_TEXTURE_COORD_1 =>16#0D93#, MAP1_TEXTURE_COORD_2 =>16#0D94#, MAP1_TEXTURE_COORD_3 =>16#0D95#, MAP1_TEXTURE_COORD_4 =>16#0D96#,
MAP1_VERTEX_3 =>16#0D97#, MAP1_VERTEX_4 =>16#0D98#, MAP2_COLOR_4 =>16#0DB0#, MAP2_INDEX =>16#0DB1#, MAP2_NORMAL =>16#0DB2#, MAP2_TEXTURE_COORD_1 =>16#0DB3#,
MAP2_TEXTURE_COORD_2 =>16#0DB4#, MAP2_TEXTURE_COORD_3 =>16#0DB5#, MAP2_TEXTURE_COORD_4 =>16#0DB6#, MAP2_VERTEX_3 =>16#0DB7#, MAP2_VERTEX_4 =>16#0DB8#,
TEXTURE_1D =>16#0DE0#, TEXTURE_2D =>16#0DE1#, POLYGON_OFFSET_POINT =>16#2A01#, POLYGON_OFFSET_LINE =>16#2A02#, CLIP_PLANE0 =>16#3000#, CLIP_PLANE1 =>16#3001#,
CLIP_PLANE2 =>16#3002#, CLIP_PLANE3 =>16#3003#, CLIP_PLANE4 =>16#3004#, CLIP_PLANE5 =>16#3005#, LIGHT0 =>16#4000#, LIGHT1 =>16#4001#, LIGHT2 =>16#4002#,
LIGHT3 =>16#4003#, LIGHT4 =>16#4004#, LIGHT5 =>16#4005#, LIGHT6 =>16#4006#, LIGHT7 =>16#4007#, POLYGON_OFFSET_FILL =>16#8037#, TEXTURE_3D_EXT =>16#806F#,
MULTISAMPLE_ARB =>16#809D#, SAMPLE_ALPHA_TO_COVERAGE_ARB =>16#809E#, SAMPLE_ALPHA_TO_ONE_ARB =>16#809F#, SAMPLE_COVERAGE_ARB =>16#80A0#, SAMPLE_BUFFERS_ARB =>16#80A8#,
SAMPLES_ARB =>16#80A9#, SAMPLE_COVERAGE_VALUE_ARB =>16#80AA#, SAMPLE_COVERAGE_INVERT_ARB =>16#80AB#, MULTISAMPLE_BIT_ARB =>16#20000000#);FOR SERVERCAPABILITYENM'SIZE USE GL.ENUM'SIZE;
PROCEDURE ENABLE (CAP:SERVERCAPABILITYENM);PROCEDURE DISABLE (CAP:SERVERCAPABILITYENM);FUNCTION ISENABLED (CAP:SERVERCAPABILITYENM)RETURN GL_BOOLEAN;
TYPE CLIENTCAPABILITYENM IS (VERTEX_ARRAY, NORMAL_ARRAY, COLOR_ARRAY, INDEX_ARRAY, TEXTURE_COORD_ARRAY, EDGE_FLAG_ARRAY);FOR CLIENTCAPABILITYENM USE
 (VERTEX_ARRAY =>16#8074#, NORMAL_ARRAY =>16#8075#, COLOR_ARRAY =>16#8076#, INDEX_ARRAY =>16#8077#, TEXTURE_COORD_ARRAY =>16#8078#, EDGE_FLAG_ARRAY =>16#8079#
);FOR CLIENTCAPABILITYENM'SIZE USE GL.ENUM'SIZE;PROCEDURE ENABLECLIENTSTATE (CAP:CLIENTCAPABILITYENM);PROCEDURE DISABLECLIENTSTATE (CAP:CLIENTCAPABILITYENM);
TYPE PARAMETERNAMEENM IS (CURRENT_COLOR, CURRENT_INDEX, CURRENT_NORMAL, CURRENT_TEXTURE_COORDS, CURRENT_RASTER_COLOR, CURRENT_RASTER_INDEX,
CURRENT_RASTER_TEXTURE_COORDS, CURRENT_RASTER_POSITION, CURRENT_RASTER_POSITION_VALID, CURRENT_RASTER_DISTANCE, POINT_SMOOTH, POINT_SIZE, POINT_SIZE_RANGE,
POINT_SIZE_GRANULARITY, LINE_SMOOTH, LINE_WIDTH, LINE_WIDTH_RANGE, LINE_WIDTH_GRANULARITY, LINE_STIPPLE, LINE_STIPPLE_PATTERN, LINE_STIPPLE_REPEAT,
LIST_MODE, MAX_LIST_NESTING, LIST_BASE, LIST_INDEX, POLYGON_MODE, POLYGON_SMOOTH, POLYGON_STIPPLE, EDGE_FLAG, CULL_FACE, CULL_FACE_MODE, FRONT_FACE,
LIGHTING, LIGHT_MODEL_LOCAL_VIEWER, LIGHT_MODEL_TWO_SIDE, LIGHT_MODEL_AMBIENT, SHADE_MODEL, COLOR_MATERIAL_FACE, COLOR_MATERIAL_PARAMETER, COLOR_MATERIAL,
FOG, FOG_INDEX, FOG_DENSITY, FOG_START, FOG_END, FOG_MODE, FOG_COLOR, DEPTH_RANGE, DEPTH_TEST, DEPTH_WRITEMASK, DEPTH_CLEAR_VALUE, DEPTH_FUNC, ACCUM_CLEAR_VALUE,
STENCIL_TEST, STENCIL_CLEAR_VALUE, STENCIL_FUNC, STENCIL_VALUE_MASK, STENCIL_FAIL, STENCIL_PASS_DEPTH_FAIL, STENCIL_PASS_DEPTH_PASS, STENCIL_REF,
STENCIL_WRITEMASK, MATRIX_MODE, NORMALIZE, VIEWPORT, MODELVIEW_STACK_DEPTH, PROJECTION_STACK_DEPTH, TEXTURE_STACK_DEPTH, MODELVIEW_MATRIX, PROJECTION_MATRIX,
TEXTURE_MATRIX, ATTRIB_STACK_DEPTH, CLIENT_ATTRIB_STACK_DEPTH, ALPHA_TEST, ALPHA_TEST_FUNC, ALPHA_TEST_REF, DITHER, BLEND_DST, BLEND_SRC, BLEND,
LOGIC_OP_MODE, INDEX_LOGIC_OP, COLOR_LOGIC_OP, AUX_BUFFERS, DRAW_BUFFER, READ_BUFFER, SCISSOR_BOX, SCISSOR_TEST, INDEX_CLEAR_VALUE, INDEX_WRITEMASK,
COLOR_CLEAR_VALUE, COLOR_WRITEMASK, INDEX_MODE, RGBA_MODE, DOUBLEBUFFER, STEREO, RENDER_MODE, PERSPECTIVE_CORRECTION_HINT, POINT_SMOOTH_HINT, LINE_SMOOTH_HINT,
POLYGON_SMOOTH_HINT, FOG_HINT, TEXTURE_GEN_S, TEXTURE_GEN_T, TEXTURE_GEN_R, TEXTURE_GEN_Q, PIXEL_MAP_I_TO_I_SIZE, PIXEL_MAP_S_TO_S_SIZE, PIXEL_MAP_I_TO_R_SIZE,
PIXEL_MAP_I_TO_G_SIZE, PIXEL_MAP_I_TO_B_SIZE, PIXEL_MAP_I_TO_A_SIZE, PIXEL_MAP_R_TO_R_SIZE, PIXEL_MAP_G_TO_G_SIZE, PIXEL_MAP_B_TO_B_SIZE, PIXEL_MAP_A_TO_A_SIZE,
UNPACK_SWAP_BYTES, UNPACK_LSB_FIRST, UNPACK_ROW_LENGTH, UNPACK_SKIP_ROWS, UNPACK_SKIP_PIXELS, UNPACK_ALIGNMENT, PACK_SWAP_BYTES, PACK_LSB_FIRST,
PACK_ROW_LENGTH, PACK_SKIP_ROWS, PACK_SKIP_PIXELS, PACK_ALIGNMENT, MAP_COLOR, MAP_STENCIL, INDEX_SHIFT, INDEX_OFFSET, RED_SCALE, RED_BIAS, ZOOM_X,
ZOOM_Y, GREEN_SCALE, GREEN_BIAS, BLUE_SCALE, BLUE_BIAS, ALPHA_SCALE, ALPHA_BIAS, DEPTH_SCALE, DEPTH_BIAS, MAX_EVAL_ORDER, MAX_LIGHTS, MAX_CLIP_PLANES,
MAX_TEXTURE_SIZE, MAX_PIXEL_MAP_TABLE, MAX_ATTRIB_STACK_DEPTH, MAX_MODELVIEW_STACK_DEPTH, MAX_NAME_STACK_DEPTH, MAX_PROJECTION_STACK_DEPTH,
MAX_TEXTURE_STACK_DEPTH, MAX_VIEWPORT_DIMS, MAX_CLIENT_ATTRIB_STACK_DEPTH, SUBPIXEL_BITS, INDEX_BITS, RED_BITS, GREEN_BITS, BLUE_BITS, ALPHA_BITS,
DEPTH_BITS, STENCIL_BITS, ACCUM_RED_BITS, ACCUM_GREEN_BITS, ACCUM_BLUE_BITS, ACCUM_ALPHA_BITS, NAME_STACK_DEPTH, AUTO_NORMAL, MAP1_COLOR_4, MAP1_INDEX,
MAP1_NORMAL, MAP1_TEXTURE_COORD_1, MAP1_TEXTURE_COORD_2, MAP1_TEXTURE_COORD_3, MAP1_TEXTURE_COORD_4, MAP1_VERTEX_3, MAP1_VERTEX_4, MAP2_COLOR_4,
MAP2_INDEX, MAP2_NORMAL, MAP2_TEXTURE_COORD_1, MAP2_TEXTURE_COORD_2, MAP2_TEXTURE_COORD_3, MAP2_TEXTURE_COORD_4, MAP2_VERTEX_3, MAP2_VERTEX_4,
MAP1_GRID_DOMAIN, MAP1_GRID_SEGMENTS, MAP2_GRID_DOMAIN, MAP2_GRID_SEGMENTS, TEXTURE_1D, TEXTURE_2D, POLYGON_OFFSET_UNITS, POLYGON_OFFSET_POINT,
POLYGON_OFFSET_LINE, POLYGON_OFFSET_FILL, POLYGON_OFFSET_FACTOR, TEXTURE_BINDING_1D, TEXTURE_BINDING_2D, VERTEX_ARRAY, NORMAL_ARRAY, COLOR_ARRAY,
INDEX_ARRAY, TEXTURE_COORD_ARRAY, EDGE_FLAG_ARRAY, VERTEX_ARRAY_SIZE, VERTEX_ARRAY_TYPE, VERTEX_ARRAY_STRIDE, NORMAL_ARRAY_TYPE, NORMAL_ARRAY_STRIDE,
COLOR_ARRAY_SIZE, COLOR_ARRAY_TYPE, COLOR_ARRAY_STRIDE, INDEX_ARRAY_TYPE, INDEX_ARRAY_STRIDE, TEXTURE_COORD_ARRAY_SIZE, TEXTURE_COORD_ARRAY_TYPE,
TEXTURE_COORD_ARRAY_STRIDE, EDGE_FLAG_ARRAY_STRIDE, SAMPLES);FOR PARAMETERNAMEENM USE (CURRENT_COLOR =>16#0B00#, CURRENT_INDEX =>16#0B01#,
CURRENT_NORMAL =>16#0B02#, CURRENT_TEXTURE_COORDS =>16#0B03#, CURRENT_RASTER_COLOR =>16#0B04#, CURRENT_RASTER_INDEX =>16#0B05#, CURRENT_RASTER_TEXTURE_COORDS =>16#0B06#,
CURRENT_RASTER_POSITION =>16#0B07#, CURRENT_RASTER_POSITION_VALID =>16#0B08#, CURRENT_RASTER_DISTANCE =>16#0B09#, POINT_SMOOTH =>16#0B10#, POINT_SIZE =>16#0B11#,
POINT_SIZE_RANGE =>16#0B12#, POINT_SIZE_GRANULARITY =>16#0B13#, LINE_SMOOTH =>16#0B20#, LINE_WIDTH =>16#0B21#, LINE_WIDTH_RANGE =>16#0B22#, LINE_WIDTH_GRANULARITY =>16#0B23#,
LINE_STIPPLE =>16#0B24#, LINE_STIPPLE_PATTERN =>16#0B25#, LINE_STIPPLE_REPEAT =>16#0B26#, LIST_MODE =>16#0B30#, MAX_LIST_NESTING =>16#0B31#, LIST_BASE =>16#0B32#,
LIST_INDEX =>16#0B33#, POLYGON_MODE =>16#0B40#, POLYGON_SMOOTH =>16#0B41#, POLYGON_STIPPLE =>16#0B42#, EDGE_FLAG =>16#0B43#, CULL_FACE =>16#0B44#,
CULL_FACE_MODE =>16#0B45#, FRONT_FACE =>16#0B46#, LIGHTING =>16#0B50#, LIGHT_MODEL_LOCAL_VIEWER =>16#0B51#, LIGHT_MODEL_TWO_SIDE =>16#0B52#, LIGHT_MODEL_AMBIENT =>16#0B53#,
SHADE_MODEL =>16#0B54#, COLOR_MATERIAL_FACE =>16#0B55#, COLOR_MATERIAL_PARAMETER =>16#0B56#, COLOR_MATERIAL =>16#0B57#, FOG =>16#0B60#, FOG_INDEX =>16#0B61#,
FOG_DENSITY =>16#0B62#, FOG_START =>16#0B63#, FOG_END =>16#0B64#, FOG_MODE =>16#0B65#, FOG_COLOR =>16#0B66#, DEPTH_RANGE =>16#0B70#, DEPTH_TEST =>16#0B71#,
DEPTH_WRITEMASK =>16#0B72#, DEPTH_CLEAR_VALUE =>16#0B73#, DEPTH_FUNC =>16#0B74#, ACCUM_CLEAR_VALUE =>16#0B80#, STENCIL_TEST =>16#0B90#, STENCIL_CLEAR_VALUE =>16#0B91#,
STENCIL_FUNC =>16#0B92#, STENCIL_VALUE_MASK =>16#0B93#, STENCIL_FAIL =>16#0B94#, STENCIL_PASS_DEPTH_FAIL =>16#0B95#, STENCIL_PASS_DEPTH_PASS =>16#0B96#,
STENCIL_REF =>16#0B97#, STENCIL_WRITEMASK =>16#0B98#, MATRIX_MODE =>16#0BA0#, NORMALIZE =>16#0BA1#, VIEWPORT =>16#0BA2#, MODELVIEW_STACK_DEPTH =>16#0BA3#,
PROJECTION_STACK_DEPTH =>16#0BA4#, TEXTURE_STACK_DEPTH =>16#0BA5#, MODELVIEW_MATRIX =>16#0BA6#, PROJECTION_MATRIX =>16#0BA7#, TEXTURE_MATRIX =>16#0BA8#,
ATTRIB_STACK_DEPTH =>16#0BB0#, CLIENT_ATTRIB_STACK_DEPTH =>16#0BB1#, ALPHA_TEST =>16#0BC0#, ALPHA_TEST_FUNC =>16#0BC1#, ALPHA_TEST_REF =>16#0BC2#,
DITHER =>16#0BD0#, BLEND_DST =>16#0BE0#, BLEND_SRC =>16#0BE1#, BLEND =>16#0BE2#, LOGIC_OP_MODE =>16#0BF0#, INDEX_LOGIC_OP =>16#0BF1#, COLOR_LOGIC_OP =>16#0BF2#,
AUX_BUFFERS =>16#0C00#, DRAW_BUFFER =>16#0C01#, READ_BUFFER =>16#0C02#, SCISSOR_BOX =>16#0C10#, SCISSOR_TEST =>16#0C11#, INDEX_CLEAR_VALUE =>16#0C20#,
INDEX_WRITEMASK =>16#0C21#, COLOR_CLEAR_VALUE =>16#0C22#, COLOR_WRITEMASK =>16#0C23#, INDEX_MODE =>16#0C30#, RGBA_MODE =>16#0C31#, DOUBLEBUFFER =>16#0C32#,
STEREO =>16#0C33#, RENDER_MODE =>16#0C40#, PERSPECTIVE_CORRECTION_HINT =>16#0C50#, POINT_SMOOTH_HINT =>16#0C51#, LINE_SMOOTH_HINT =>16#0C52#, POLYGON_SMOOTH_HINT =>16#0C53#,
FOG_HINT =>16#0C54#, TEXTURE_GEN_S =>16#0C60#, TEXTURE_GEN_T =>16#0C61#, TEXTURE_GEN_R =>16#0C62#, TEXTURE_GEN_Q =>16#0C63#, PIXEL_MAP_I_TO_I_SIZE =>16#0CB0#,
PIXEL_MAP_S_TO_S_SIZE =>16#0CB1#, PIXEL_MAP_I_TO_R_SIZE =>16#0CB2#, PIXEL_MAP_I_TO_G_SIZE =>16#0CB3#, PIXEL_MAP_I_TO_B_SIZE =>16#0CB4#, PIXEL_MAP_I_TO_A_SIZE =>16#0CB5#,
PIXEL_MAP_R_TO_R_SIZE =>16#0CB6#, PIXEL_MAP_G_TO_G_SIZE =>16#0CB7#, PIXEL_MAP_B_TO_B_SIZE =>16#0CB8#, PIXEL_MAP_A_TO_A_SIZE =>16#0CB9#, UNPACK_SWAP_BYTES =>16#0CF0#,
UNPACK_LSB_FIRST =>16#0CF1#, UNPACK_ROW_LENGTH =>16#0CF2#, UNPACK_SKIP_ROWS =>16#0CF3#, UNPACK_SKIP_PIXELS =>16#0CF4#, UNPACK_ALIGNMENT =>16#0CF5#,
PACK_SWAP_BYTES =>16#0D00#, PACK_LSB_FIRST =>16#0D01#, PACK_ROW_LENGTH =>16#0D02#, PACK_SKIP_ROWS =>16#0D03#, PACK_SKIP_PIXELS =>16#0D04#, PACK_ALIGNMENT =>16#0D05#,
MAP_COLOR =>16#0D10#, MAP_STENCIL =>16#0D11#, INDEX_SHIFT =>16#0D12#, INDEX_OFFSET =>16#0D13#, RED_SCALE =>16#0D14#, RED_BIAS =>16#0D15#, ZOOM_X =>16#0D16#,
ZOOM_Y =>16#0D17#, GREEN_SCALE =>16#0D18#, GREEN_BIAS =>16#0D19#, BLUE_SCALE =>16#0D1A#, BLUE_BIAS =>16#0D1B#, ALPHA_SCALE =>16#0D1C#, ALPHA_BIAS =>16#0D1D#,
DEPTH_SCALE =>16#0D1E#, DEPTH_BIAS =>16#0D1F#, MAX_EVAL_ORDER =>16#0D30#, MAX_LIGHTS =>16#0D31#, MAX_CLIP_PLANES =>16#0D32#, MAX_TEXTURE_SIZE =>16#0D33#,
MAX_PIXEL_MAP_TABLE =>16#0D34#, MAX_ATTRIB_STACK_DEPTH =>16#0D35#, MAX_MODELVIEW_STACK_DEPTH =>16#0D36#, MAX_NAME_STACK_DEPTH =>16#0D37#, MAX_PROJECTION_STACK_DEPTH =>16#0D38#,
MAX_TEXTURE_STACK_DEPTH =>16#0D39#, MAX_VIEWPORT_DIMS =>16#0D3A#, MAX_CLIENT_ATTRIB_STACK_DEPTH =>16#0D3B#, SUBPIXEL_BITS =>16#0D50#, INDEX_BITS =>16#0D51#,
RED_BITS =>16#0D52#, GREEN_BITS =>16#0D53#, BLUE_BITS =>16#0D54#, ALPHA_BITS =>16#0D55#, DEPTH_BITS =>16#0D56#, STENCIL_BITS =>16#0D57#, ACCUM_RED_BITS =>16#0D58#,
ACCUM_GREEN_BITS =>16#0D59#, ACCUM_BLUE_BITS =>16#0D5A#, ACCUM_ALPHA_BITS =>16#0D5B#, NAME_STACK_DEPTH =>16#0D70#, AUTO_NORMAL =>16#0D80#, MAP1_COLOR_4 =>16#0D90#,
MAP1_INDEX =>16#0D91#, MAP1_NORMAL =>16#0D92#, MAP1_TEXTURE_COORD_1 =>16#0D93#, MAP1_TEXTURE_COORD_2 =>16#0D94#, MAP1_TEXTURE_COORD_3 =>16#0D95#,
MAP1_TEXTURE_COORD_4 =>16#0D96#, MAP1_VERTEX_3 =>16#0D97#, MAP1_VERTEX_4 =>16#0D98#, MAP2_COLOR_4 =>16#0DB0#, MAP2_INDEX =>16#0DB1#, MAP2_NORMAL =>16#0DB2#,
MAP2_TEXTURE_COORD_1 =>16#0DB3#, MAP2_TEXTURE_COORD_2 =>16#0DB4#, MAP2_TEXTURE_COORD_3 =>16#0DB5#, MAP2_TEXTURE_COORD_4 =>16#0DB6#, MAP2_VERTEX_3 =>16#0DB7#,
MAP2_VERTEX_4 =>16#0DB8#, MAP1_GRID_DOMAIN =>16#0DD0#, MAP1_GRID_SEGMENTS =>16#0DD1#, MAP2_GRID_DOMAIN =>16#0DD2#, MAP2_GRID_SEGMENTS =>16#0DD3#,
TEXTURE_1D =>16#0DE0#, TEXTURE_2D =>16#0DE1#, POLYGON_OFFSET_UNITS =>16#2A00#, POLYGON_OFFSET_POINT =>16#2A01#, POLYGON_OFFSET_LINE =>16#2A02#,
POLYGON_OFFSET_FILL =>16#8037#, POLYGON_OFFSET_FACTOR =>16#8038#, TEXTURE_BINDING_1D =>16#8068#, TEXTURE_BINDING_2D =>16#8069#, VERTEX_ARRAY =>16#8074#,
NORMAL_ARRAY =>16#8075#, COLOR_ARRAY =>16#8076#, INDEX_ARRAY =>16#8077#, TEXTURE_COORD_ARRAY =>16#8078#, EDGE_FLAG_ARRAY =>16#8079#, VERTEX_ARRAY_SIZE =>16#807A#,
VERTEX_ARRAY_TYPE =>16#807B#, VERTEX_ARRAY_STRIDE =>16#807C#, NORMAL_ARRAY_TYPE =>16#807E#, NORMAL_ARRAY_STRIDE =>16#807F#, COLOR_ARRAY_SIZE =>16#8081#,
COLOR_ARRAY_TYPE =>16#8082#, COLOR_ARRAY_STRIDE =>16#8083#, INDEX_ARRAY_TYPE =>16#8085#, INDEX_ARRAY_STRIDE =>16#8086#, TEXTURE_COORD_ARRAY_SIZE =>16#8088#,
TEXTURE_COORD_ARRAY_TYPE =>16#8089#, TEXTURE_COORD_ARRAY_STRIDE =>16#808A#, EDGE_FLAG_ARRAY_STRIDE =>16#808C#, SAMPLES =>16#80A9#);FOR PARAMETERNAMEENM'SIZE USE GL.ENUM'SIZE;
PROCEDURE GETBOOLEANV (PNAME:PARAMETERNAMEENM;PARAMS:GL_BOOLEANPTR);PROCEDURE GET (PNAME:PARAMETERNAMEENM;PARAMS:GL.DOUBLEPTR);PROCEDURE GETFLOATV (PNAME:PARAMETERNAMEENM;
PARAMS:FLOATPTR);PROCEDURE GETINTEGERV (PNAME:PARAMETERNAMEENM;PARAMS:GL.INTPOINTER);TYPE RENDERMODEENM IS (RENDER, FEEDBACK, GL_SELECT);
FOR RENDERMODEENM USE (RENDER =>16#1C00#, FEEDBACK =>16#1C01#, GL_SELECT =>16#1C02#);FOR RENDERMODEENM'SIZE USE GL.ENUM'SIZE;FUNCTION RENDERMODE (MODE:RENDERMODEENM)
RETURN GL.INT;TYPE ERRORENM IS (NO_ERROR, INVALID_ENUM, INVALID_VALUE, INVALID_OPERATION, STACK_OVERFLOW, STACK_UNDERFLOW, OUT_OF_MEMORY);FOR ERRORENM USE
 (NO_ERROR =>16#0000#, INVALID_ENUM =>16#0500#, INVALID_VALUE =>16#0501#, INVALID_OPERATION =>16#0502#, STACK_OVERFLOW =>16#0503#, STACK_UNDERFLOW =>16#0504#,
OUT_OF_MEMORY =>16#0505#);FOR ERRORENM'SIZE USE GL.ENUM'SIZE;FUNCTION GETERROR RETURN ERRORENM;TYPE STRINGENM IS (VENDOR, RENDERER, VERSION,
EXTENSIONS);FOR STRINGENM USE (VENDOR =>16#1F00#, RENDERER =>16#1F01#, VERSION =>16#1F02#, EXTENSIONS =>16#1F03#);FOR STRINGENM'SIZE USE GL.ENUM'SIZE;
FUNCTION GETSTRING (NAME:STRINGENM)RETURN UBYTEPTR;FUNCTION GETSTRING (NAME:STRINGENM)RETURN STRING;TYPE HINTENM IS (PERSPECTIVE_CORRECTION_HINT,
POINT_SMOOTH_HINT, LINE_SMOOTH_HINT, POLYGON_SMOOTH_HINT, FOG_HINT);FOR HINTENM USE (PERSPECTIVE_CORRECTION_HINT =>16#0C50#, POINT_SMOOTH_HINT =>16#0C51#,
LINE_SMOOTH_HINT =>16#0C52#, POLYGON_SMOOTH_HINT =>16#0C53#, FOG_HINT =>16#0C54#);FOR HINTENM'SIZE USE GL.ENUM'SIZE;TYPE HINTMODEENM IS (DONT_CARE,
FASTEST, NICEST);FOR HINTMODEENM USE (DONT_CARE =>16#1100#, FASTEST =>16#1101#, NICEST =>16#1102#);FOR HINTMODEENM'SIZE USE GL.ENUM'SIZE;PROCEDURE HINT (TARGET:HINTENM;
MODE:HINTMODEENM);TYPE ACCUMENM IS (ACCUM, LOAD, GL_RETURN, MULT, ADD);FOR ACCUMENM USE (ACCUM =>16#0100#, LOAD =>16#0101#, GL_RETURN =>16#0102#,
MULT =>16#0103#, ADD =>16#0104#);FOR ACCUMENM'SIZE USE GL.ENUM'SIZE;PROCEDURE ACCUM (OP:ACCUMENM;VALUE:GL.FLOAT);TYPE MATRIXMODEENM IS (MODELVIEW,
PROJECTION, TEXTURE);FOR MATRIXMODEENM USE (MODELVIEW =>16#1700#, PROJECTION =>16#1701#, TEXTURE =>16#1702#);FOR MATRIXMODEENM'SIZE USE GL.ENUM'SIZE;
PROCEDURE MATRIXMODE (MODE:MATRIXMODEENM);TYPE LISTMODEENM IS (COMPILE, COMPILE_AND_EXECUTE);FOR LISTMODEENM USE (COMPILE =>16#1300#, COMPILE_AND_EXECUTE =>16#1301#
);FOR LISTMODEENM'SIZE USE GL.ENUM'SIZE;TYPE OFFSETTYPEENM IS (GL_BYTE, GL_UNSIGNED_BYTE, GL_SHORT, GL_UNSIGNED_SHORT, GL_INT, GL_UNSIGNED_INT,
GL_FLOAT, GL_2_BYTES, GL_3_BYTES, GL_4_BYTES);FOR OFFSETTYPEENM USE (GL_BYTE =>16#1400#, GL_UNSIGNED_BYTE =>16#1401#, GL_SHORT =>16#1402#, GL_UNSIGNED_SHORT =>16#1403#,
GL_INT =>16#1404#, GL_UNSIGNED_INT =>16#1405#, GL_FLOAT =>16#1406#, GL_2_BYTES =>16#1407#, GL_3_BYTES =>16#1408#, GL_4_BYTES =>16#1409#);FOR OFFSETTYPEENM'SIZE USE GL.ENUM'SIZE;
FUNCTION ISLIST (LIST:GL.UINT)RETURN GL_BOOLEAN;PROCEDURE DELETELISTS (LIST:GL.UINT;C_RANGE:GL.SIZEI);FUNCTION GENLISTS (C_RANGE:GL.SIZEI)RETURN GL.UINT;
PROCEDURE NEWLIST (LIST:GL.UINT;MODE:LISTMODEENM);PROCEDURE ENDLIST;PROCEDURE CALLLIST (LIST:GL.UINT);PROCEDURE CALLLISTS (N:GL.SIZEI;C_TYPE:OFFSETTYPEENM;
LISTS:GL.POINTER);PROCEDURE LISTBASE (BASE:GL.UINT);TYPE OBJECTTYPEENM IS (POINTS, LINES, LINE_LOOP, LINE_STRIP, TRIANGLES, TRIANGLE_STRIP, TRIANGLE_FAN,
QUADS, QUAD_STRIP, POLYGON);FOR OBJECTTYPEENM USE (POINTS =>16#0000#, LINES =>16#0001#, LINE_LOOP =>16#0002#, LINE_STRIP =>16#0003#, TRIANGLES =>16#0004#,
TRIANGLE_STRIP =>16#0005#, TRIANGLE_FAN =>16#0006#, QUADS =>16#0007#, QUAD_STRIP =>16#0008#, POLYGON =>16#0009#);FOR OBJECTTYPEENM'SIZE USE GL.ENUM'SIZE;
PROCEDURE GL_BEGIN (MODE:OBJECTTYPEENM);PROCEDURE GL_END;TYPE VERTEXTYPEENM IS (GL_SHORT, GL_INT, GL_FLOAT, GL_DOUBLE);FOR VERTEXTYPEENM USE
 (GL_SHORT =>16#1402#, GL_INT =>16#1404#, GL_FLOAT =>16#1406#, GL_DOUBLE =>16#140A#);FOR VERTEXTYPEENM'SIZE USE GL.ENUM'SIZE;TYPE NORMALTYPEENM IS
 (GL_BYTE, GL_SHORT, GL_INT, GL_FLOAT, GL_DOUBLE);FOR NORMALTYPEENM USE (GL_BYTE =>16#1400#, GL_SHORT =>16#1402#, GL_INT =>16#1404#, GL_FLOAT =>16#1406#,
GL_DOUBLE =>16#140A#);FOR NORMALTYPEENM'SIZE USE GL.ENUM'SIZE;TYPE COLORTYPEENM IS (GL_BYTE, GL_UNSIGNED_BYTE, GL_SHORT, GL_UNSIGNED_SHORT,
GL_INT, GL_UNSIGNED_INT, GL_FLOAT, GL_DOUBLE);FOR COLORTYPEENM USE (GL_BYTE =>16#1400#, GL_UNSIGNED_BYTE =>16#1401#, GL_SHORT =>16#1402#, GL_UNSIGNED_SHORT =>16#1403#,
GL_INT =>16#1404#, GL_UNSIGNED_INT =>16#1405#, GL_FLOAT =>16#1406#, GL_DOUBLE =>16#140A#);FOR COLORTYPEENM'SIZE USE GL.ENUM'SIZE;TYPE INDEXTYPEENM IS
 (GL_UNSIGNED_BYTE, GL_SHORT, GL_INT, GL_FLOAT, GL_DOUBLE);FOR INDEXTYPEENM USE (GL_UNSIGNED_BYTE =>16#1401#, GL_SHORT =>16#1402#, GL_INT =>16#1404#,
GL_FLOAT =>16#1406#, GL_DOUBLE =>16#140A#);FOR INDEXTYPEENM'SIZE USE GL.ENUM'SIZE;TYPE TEXCOORDTYPEENM IS (GL_SHORT, GL_INT, GL_FLOAT, GL_DOUBLE
);FOR TEXCOORDTYPEENM USE (GL_SHORT =>16#1402#, GL_INT =>16#1404#, GL_FLOAT =>16#1406#, GL_DOUBLE =>16#140A#);FOR TEXCOORDTYPEENM'SIZE USE GL.ENUM'SIZE;
TYPE ARRAYINDEXTYPEENM IS (UNSIGNED_BYTE, UNSIGNED_SHORT, UNSIGNED_INT);FOR ARRAYINDEXTYPEENM USE (UNSIGNED_BYTE =>16#1401#, UNSIGNED_SHORT =>16#1403#,
UNSIGNED_INT =>16#1405#);FOR ARRAYINDEXTYPEENM'SIZE USE GL.ENUM'SIZE;TYPE INTERLEAVEFORMATENM IS (V2F, V3F, C4UB_V2F, C4UB_V3F, C3F_V3F, N3F_V3F,
C4F_N3F_V3F, T2F_V3F, T4F_V4F, T2F_C4UB_V3F, T2F_C3F_V3F, T2F_N3F_V3F, T2F_C4F_N3F_V3F, T4F_C4F_N3F_V4F);FOR INTERLEAVEFORMATENM USE (V2F =>16#2A20#,
V3F =>16#2A21#, C4UB_V2F =>16#2A22#, C4UB_V3F =>16#2A23#, C3F_V3F =>16#2A24#, N3F_V3F =>16#2A25#, C4F_N3F_V3F =>16#2A26#, T2F_V3F =>16#2A27#, T4F_V4F =>16#2A28#,
T2F_C4UB_V3F =>16#2A29#, T2F_C3F_V3F =>16#2A2A#, T2F_N3F_V3F =>16#2A2B#, T2F_C4F_N3F_V3F =>16#2A2C#, T4F_C4F_N3F_V4F =>16#2A2D#);FOR INTERLEAVEFORMATENM'SIZE USE GL.ENUM'SIZE;
PROCEDURE VERTEXPOINTER (SIZE:GL.INT;C_TYPE:VERTEXTYPEENM;STRIDE:GL.SIZEI;PTR:GL.POINTER);PROCEDURE NORMALPOINTER (C_TYPE:NORMALTYPEENM;
STRIDE:GL.SIZEI;PTR:GL.POINTER);PROCEDURE COLORPOINTER (SIZE:GL.INT;C_TYPE:COLORTYPEENM;STRIDE:GL.SIZEI;PTR:GL.POINTER);PROCEDURE INDEXPOINTER (C_TYPE:INDEXTYPEENM;
STRIDE:GL.SIZEI;PTR:GL.POINTER);PROCEDURE TEXCOORDPOINTER (SIZE:GL.INT;C_TYPE:TEXCOORDTYPEENM;STRIDE:GL.SIZEI;PTR:GL.POINTER);PROCEDURE EDGEFLAGPOINTER (STRIDE:GL.SIZEI;
PTR:GL_BOOLEANPTR);PROCEDURE ARRAYELEMENT (I:GL.INT);PROCEDURE DRAWARRAYS (MODE:OBJECTTYPEENM;FIRST:GL.INT;COUNT:GL.SIZEI);PROCEDURE DRAWELEMENTS (MODE:OBJECTTYPEENM;
COUNT:GL.SIZEI;C_TYPE:ARRAYINDEXTYPEENM;INDICES:GL.POINTER);PROCEDURE INTERLEAVEDARRAYS (FORMAT:INTERLEAVEFORMATENM;STRIDE:GL.SIZEI;POINTER:GL.POINTER);
TYPE SHADEMODEENM IS (FLAT, SMOOTH);FOR SHADEMODEENM USE (FLAT =>16#1D00#, SMOOTH =>16#1D01#);FOR SHADEMODEENM'SIZE USE GL.ENUM'SIZE;PROCEDURE SHADEMODEL (MODE:SHADEMODEENM);
TYPE LIGHTIDENM IS (LIGHT0, LIGHT1, LIGHT2, LIGHT3, LIGHT4, LIGHT5, LIGHT6, LIGHT7);FOR LIGHTIDENM USE (LIGHT0 =>16#4000#, LIGHT1 =>16#4001#, LIGHT2 =>16#4002#,
LIGHT3 =>16#4003#, LIGHT4 =>16#4004#, LIGHT5 =>16#4005#, LIGHT6 =>16#4006#, LIGHT7 =>16#4007#);FOR LIGHTIDENM'SIZE USE GL.ENUM'SIZE;TYPE LIGHTPARAMETERENM IS
 (SPOT_EXPONENT, SPOT_CUTOFF, CONSTANT_ATTENUATION, LINEAR_ATTENUATION, QUADRATIC_ATTENUATION);FOR LIGHTPARAMETERENM USE (SPOT_EXPONENT =>16#1205#,
SPOT_CUTOFF =>16#1206#, CONSTANT_ATTENUATION =>16#1207#, LINEAR_ATTENUATION =>16#1208#, QUADRATIC_ATTENUATION =>16#1209#);FOR LIGHTPARAMETERENM'SIZE USE GL.ENUM'SIZE;
TYPE LIGHTPARAMETERVENM IS (AMBIENT, DIFFUSE, SPECULAR, POSITION, SPOT_DIRECTION, SPOT_EXPONENT, SPOT_CUTOFF, CONSTANT_ATTENUATION, LINEAR_ATTENUATION,
QUADRATIC_ATTENUATION);FOR LIGHTPARAMETERVENM USE (AMBIENT =>16#1200#, DIFFUSE =>16#1201#, SPECULAR =>16#1202#, POSITION =>16#1203#, SPOT_DIRECTION =>16#1204#,
SPOT_EXPONENT =>16#1205#, SPOT_CUTOFF =>16#1206#, CONSTANT_ATTENUATION =>16#1207#, LINEAR_ATTENUATION =>16#1208#, QUADRATIC_ATTENUATION =>16#1209#
);FOR LIGHTPARAMETERVENM'SIZE USE GL.ENUM'SIZE;TYPE LIGHTMODELENM IS (LIGHT_MODEL_LOCAL_VIEWER, LIGHT_MODEL_TWO_SIDE);FOR LIGHTMODELENM USE
 (LIGHT_MODEL_LOCAL_VIEWER =>16#0B51#, LIGHT_MODEL_TWO_SIDE =>16#0B52#);FOR LIGHTMODELENM'SIZE USE GL.ENUM'SIZE;TYPE LIGHTMODELVENM IS (LIGHT_MODEL_LOCAL_VIEWER,
LIGHT_MODEL_TWO_SIDE, LIGHT_MODEL_AMBIENT);FOR LIGHTMODELVENM USE (LIGHT_MODEL_LOCAL_VIEWER =>16#0B51#, LIGHT_MODEL_TWO_SIDE =>16#0B52#, LIGHT_MODEL_AMBIENT =>16#0B53#
);FOR LIGHTMODELVENM'SIZE USE GL.ENUM'SIZE;PROCEDURE LIGHT (LIGHT:LIGHTIDENM;PNAME:LIGHTPARAMETERENM;PARAM:GL.FLOAT);PROCEDURE LIGHTI (LIGHT:LIGHTIDENM;
PNAME:LIGHTPARAMETERENM;PARAM:GL.INT);PROCEDURE LIGHT (LIGHT:LIGHTIDENM;PNAME:LIGHTPARAMETERVENM;PARAMS:LIGHT_FLOAT_VECTOR);PROCEDURE LIGHTIV (LIGHT:LIGHTIDENM;
PNAME:LIGHTPARAMETERVENM;PARAMS:GL.INTPOINTER);PROCEDURE GETLIGHTFV (LIGHT:LIGHTIDENM;PNAME:LIGHTPARAMETERVENM;PARAMS:FLOATPTR);PROCEDURE GETLIGHTIV (LIGHT:LIGHTIDENM;
PNAME:LIGHTPARAMETERVENM;PARAMS:GL.INTPOINTER);PROCEDURE LIGHTMODELF (PNAME:LIGHTMODELENM;PARAM:GL.FLOAT);PROCEDURE LIGHTMODELI (PNAME:LIGHTMODELENM;
PARAM:GL.INT);PROCEDURE LIGHTMODELFV (PNAME:LIGHTMODELVENM;PARAMS:FLOATPTR);PROCEDURE LIGHTMODELIV (PNAME:LIGHTMODELVENM;PARAMS:GL.INTPOINTER);
TYPE MATERIALPARAMETERENM IS (SHININESS);FOR MATERIALPARAMETERENM USE (SHININESS =>16#1601#);FOR MATERIALPARAMETERENM'SIZE USE GL.ENUM'SIZE;
TYPE MATERIALPARAMETERVENM IS (AMBIENT, DIFFUSE, SPECULAR, EMISSION, SHININESS, AMBIENT_AND_DIFFUSE, COLOR_INDEXES);FOR MATERIALPARAMETERVENM USE
 (AMBIENT =>16#1200#, DIFFUSE =>16#1201#, SPECULAR =>16#1202#, EMISSION =>16#1600#, SHININESS =>16#1601#, AMBIENT_AND_DIFFUSE =>16#1602#, COLOR_INDEXES =>16#1603#
);FOR MATERIALPARAMETERVENM'SIZE USE GL.ENUM'SIZE;TYPE GETMATERIALPARAMETERENM IS (AMBIENT, DIFFUSE, SPECULAR, EMISSION, SHININESS, COLOR_INDEXES
);FOR GETMATERIALPARAMETERENM USE (AMBIENT =>16#1200#, DIFFUSE =>16#1201#, SPECULAR =>16#1202#, EMISSION =>16#1600#, SHININESS =>16#1601#, COLOR_INDEXES =>16#1603#
);FOR GETMATERIALPARAMETERENM'SIZE USE GL.ENUM'SIZE;TYPE COLORMATERIALENM IS (AMBIENT, DIFFUSE, SPECULAR, EMISSION, AMBIENT_AND_DIFFUSE);
FOR COLORMATERIALENM USE (AMBIENT =>16#1200#, DIFFUSE =>16#1201#, SPECULAR =>16#1202#, EMISSION =>16#1600#, AMBIENT_AND_DIFFUSE =>16#1602#);FOR COLORMATERIALENM'SIZE USE GL.ENUM'SIZE;
PROCEDURE MATERIAL (FACE:FACEENM;PNAME:MATERIALPARAMETERENM;PARAM:GL.FLOAT);PROCEDURE MATERIALI (FACE:FACEENM;PNAME:MATERIALPARAMETERENM;
PARAM:GL.INT);PROCEDURE MATERIAL (FACE:FACEENM;PNAME:MATERIALPARAMETERVENM;PARAMS:MATERIAL_FLOAT_VECTOR);PROCEDURE MATERIALIV (FACE:FACEENM;
PNAME:MATERIALPARAMETERVENM;PARAMS:GL.INTPOINTER);PROCEDURE GETMATERIALFV (FACE:FACEENM;PNAME:GETMATERIALPARAMETERENM;PARAMS:FLOATPTR);
PROCEDURE GETMATERIALIV (FACE:FACEENM;PNAME:GETMATERIALPARAMETERENM;PARAMS:GL.INTPOINTER);PROCEDURE COLORMATERIAL (FACE:FACEENM;MODE:COLORMATERIALENM);
TYPE PIXELSTORAGEENM IS (UNPACK_SWAP_BYTES, UNPACK_LSB_FIRST, UNPACK_ROW_LENGTH, UNPACK_SKIP_ROWS, UNPACK_SKIP_PIXELS, UNPACK_ALIGNMENT, PACK_SWAP_BYTES,
PACK_LSB_FIRST, PACK_ROW_LENGTH, PACK_SKIP_ROWS, PACK_SKIP_PIXELS, PACK_ALIGNMENT);FOR PIXELSTORAGEENM USE (UNPACK_SWAP_BYTES =>16#0CF0#, UNPACK_LSB_FIRST =>16#0CF1#,
UNPACK_ROW_LENGTH =>16#0CF2#, UNPACK_SKIP_ROWS =>16#0CF3#, UNPACK_SKIP_PIXELS =>16#0CF4#, UNPACK_ALIGNMENT =>16#0CF5#, PACK_SWAP_BYTES =>16#0D00#,
PACK_LSB_FIRST =>16#0D01#, PACK_ROW_LENGTH =>16#0D02#, PACK_SKIP_ROWS =>16#0D03#, PACK_SKIP_PIXELS =>16#0D04#, PACK_ALIGNMENT =>16#0D05#);FOR PIXELSTORAGEENM'SIZE USE GL.ENUM'SIZE;
TYPE PIXELTRANSFERENM IS (MAP_COLOR, MAP_STENCIL, INDEX_SHIFT, INDEX_OFFSET, RED_SCALE, RED_BIAS, GREEN_SCALE, GREEN_BIAS, BLUE_SCALE, BLUE_BIAS,
ALPHA_SCALE, ALPHA_BIAS, DEPTH_SCALE, DEPTH_BIAS);FOR PIXELTRANSFERENM USE (MAP_COLOR =>16#0D10#, MAP_STENCIL =>16#0D11#, INDEX_SHIFT =>16#0D12#,
INDEX_OFFSET =>16#0D13#, RED_SCALE =>16#0D14#, RED_BIAS =>16#0D15#, GREEN_SCALE =>16#0D18#, GREEN_BIAS =>16#0D19#, BLUE_SCALE =>16#0D1A#, BLUE_BIAS =>16#0D1B#,
ALPHA_SCALE =>16#0D1C#, ALPHA_BIAS =>16#0D1D#, DEPTH_SCALE =>16#0D1E#, DEPTH_BIAS =>16#0D1F#);FOR PIXELTRANSFERENM'SIZE USE GL.ENUM'SIZE;TYPE PIXELMAPENM IS
 (PIXEL_MAP_I_TO_I, PIXEL_MAP_S_TO_S, PIXEL_MAP_I_TO_R, PIXEL_MAP_I_TO_G, PIXEL_MAP_I_TO_B, PIXEL_MAP_I_TO_A, PIXEL_MAP_R_TO_R, PIXEL_MAP_G_TO_G,
PIXEL_MAP_B_TO_B, PIXEL_MAP_A_TO_A);FOR PIXELMAPENM USE (PIXEL_MAP_I_TO_I =>16#0C70#, PIXEL_MAP_S_TO_S =>16#0C71#, PIXEL_MAP_I_TO_R =>16#0C72#,
PIXEL_MAP_I_TO_G =>16#0C73#, PIXEL_MAP_I_TO_B =>16#0C74#, PIXEL_MAP_I_TO_A =>16#0C75#, PIXEL_MAP_R_TO_R =>16#0C76#, PIXEL_MAP_G_TO_G =>16#0C77#,
PIXEL_MAP_B_TO_B =>16#0C78#, PIXEL_MAP_A_TO_A =>16#0C79#);FOR PIXELMAPENM'SIZE USE GL.ENUM'SIZE;TYPE PIXELFORMATENM IS (COLOR_INDEX, STENCIL_INDEX,
DEPTH_COMPONENT, RED, GREEN, BLUE, ALPHA, RGB, RGBA, LUMINANCE, LUMINANCE_ALPHA, BGR, BGRA);FOR PIXELFORMATENM USE (COLOR_INDEX =>16#1900#, STENCIL_INDEX =>16#1901#,
DEPTH_COMPONENT =>16#1902#, RED =>16#1903#, GREEN =>16#1904#, BLUE =>16#1905#, ALPHA =>16#1906#, RGB =>16#1907#, RGBA =>16#1908#, LUMINANCE =>16#1909#,
LUMINANCE_ALPHA =>16#190A#, BGR =>16#80E0#, BGRA =>16#80E1#);FOR PIXELFORMATENM'SIZE USE GL.ENUM'SIZE;TYPE PIXELDATATYPEENM IS (GL_BYTE, GL_UNSIGNED_BYTE,
GL_SHORT, GL_UNSIGNED_SHORT, GL_INT, GL_UNSIGNED_INT, GL_FLOAT, GL_BITMAP);FOR PIXELDATATYPEENM USE (GL_BYTE =>16#1400#, GL_UNSIGNED_BYTE =>16#1401#,
GL_SHORT =>16#1402#, GL_UNSIGNED_SHORT =>16#1403#, GL_INT =>16#1404#, GL_UNSIGNED_INT =>16#1405#, GL_FLOAT =>16#1406#, GL_BITMAP =>16#1A00#);FOR PIXELDATATYPEENM'SIZE USE GL.ENUM'SIZE;
TYPE PIXELCOPYTYPEENM IS (COLOR, DEPTH, STENCIL);FOR PIXELCOPYTYPEENM USE (COLOR =>16#1800#, DEPTH =>16#1801#, STENCIL =>16#1802#);FOR PIXELCOPYTYPEENM'SIZE USE GL.ENUM'SIZE;
PROCEDURE PIXELZOOM (XFACTOR:GL.FLOAT;YFACTOR:GL.FLOAT);PROCEDURE PIXELSTOREF (PNAME:PIXELSTORAGEENM;PARAM:GL.FLOAT);PROCEDURE PIXELSTORE (PNAME:PIXELSTORAGEENM;
PARAM:GL.INT);PROCEDURE PIXELTRANSFERF (PNAME:PIXELTRANSFERENM;PARAM:GL.FLOAT);PROCEDURE PIXELTRANSFERI (PNAME:PIXELTRANSFERENM;PARAM:GL.INT);
PROCEDURE PIXELMAPFV (MAP:PIXELMAPENM;MAPSIZE:GL.INT;VALUES:FLOATPTR);PROCEDURE PIXELMAPUIV (MAP:PIXELMAPENM;MAPSIZE:GL.INT;VALUES:GL.UINTPTR);
PROCEDURE PIXELMAPUSV (MAP:PIXELMAPENM;MAPSIZE:GL.INT;VALUES:USHORTPTR);PROCEDURE GETPIXELMAPFV (MAP:PIXELMAPENM;VALUES:FLOATPTR);PROCEDURE GETPIXELMAPUIV (MAP:PIXELMAPENM;
VALUES:GL.UINTPTR);PROCEDURE GETPIXELMAPUSV (MAP:PIXELMAPENM;VALUES:USHORTPTR);PROCEDURE READPIXELS (X:GL.INT;Y:GL.INT;WIDTH:GL.SIZEI;HEIGHT:GL.SIZEI;
FORMAT:PIXELFORMATENM;C_TYPE:PIXELDATATYPEENM;PIXELS:GL.POINTER);PROCEDURE DRAWPIXELS (WIDTH:GL.SIZEI;HEIGHT:GL.SIZEI;FORMAT:PIXELFORMATENM;
C_TYPE:PIXELDATATYPEENM;PIXELS:GL.POINTER);PROCEDURE COPYPIXELS (X:GL.INT;Y:GL.INT;WIDTH:GL.SIZEI;HEIGHT:GL.SIZEI;C_TYPE:PIXELCOPYTYPEENM);
TYPE TEXCOORDENM IS (S, T, R, Q);FOR TEXCOORDENM USE (S =>16#2000#, T =>16#2001#, R =>16#2002#, Q =>16#2003#);FOR TEXCOORDENM'SIZE USE GL.ENUM'SIZE;
TYPE TEXPARAMETERENM IS (TEXTURE_GEN_MODE);FOR TEXPARAMETERENM USE (TEXTURE_GEN_MODE =>16#2500#);FOR TEXPARAMETERENM'SIZE USE GL.ENUM'SIZE;
TYPE TEXPARAMETERVENM IS (TEXTURE_GEN_MODE, OBJECT_PLANE, EYE_PLANE);FOR TEXPARAMETERVENM USE (TEXTURE_GEN_MODE =>16#2500#, OBJECT_PLANE =>16#2501#,
EYE_PLANE =>16#2502#);FOR TEXPARAMETERVENM'SIZE USE GL.ENUM'SIZE;TYPE TEXENVENM IS (TEXTURE_ENV);FOR TEXENVENM USE (TEXTURE_ENV =>16#2300#
);FOR TEXENVENM'SIZE USE GL.ENUM'SIZE;TYPE TEXENVPARAMETERENM IS (TEXTURE_ENV_MODE);FOR TEXENVPARAMETERENM USE (TEXTURE_ENV_MODE =>16#2200#
);FOR TEXENVPARAMETERENM'SIZE USE GL.ENUM'SIZE;TYPE TEXENVPARAMETERVENM IS (TEXTURE_ENV_MODE, TEXTURE_ENV_COLOR);FOR TEXENVPARAMETERVENM USE
 (TEXTURE_ENV_MODE =>16#2200#, TEXTURE_ENV_COLOR =>16#2201#);FOR TEXENVPARAMETERVENM'SIZE USE GL.ENUM'SIZE;TYPE TARGETTEXENM IS (TEXTURE_1D,
TEXTURE_2D);FOR TARGETTEXENM USE (TEXTURE_1D =>16#0DE0#, TEXTURE_2D =>16#0DE1#);FOR TARGETTEXENM'SIZE USE GL.ENUM'SIZE;TYPE TEXPARAMENM IS
 (TEXTURE_MAG_FILTER, TEXTURE_MIN_FILTER, TEXTURE_WRAP_S, TEXTURE_WRAP_T, TEXTURE_PRIORITY);FOR TEXPARAMENM USE (TEXTURE_MAG_FILTER =>16#2800#,
TEXTURE_MIN_FILTER =>16#2801#, TEXTURE_WRAP_S =>16#2802#, TEXTURE_WRAP_T =>16#2803#, TEXTURE_PRIORITY =>16#8066#);FOR TEXPARAMENM'SIZE USE GL.ENUM'SIZE;
TYPE TEXPARAMVENM IS (TEXTURE_BORDER_COLOR, TEXTURE_MAG_FILTER, TEXTURE_MIN_FILTER, TEXTURE_WRAP_S, TEXTURE_WRAP_T, TEXTURE_PRIORITY);FOR TEXPARAMVENM USE
 (TEXTURE_BORDER_COLOR =>16#1004#, TEXTURE_MAG_FILTER =>16#2800#, TEXTURE_MIN_FILTER =>16#2801#, TEXTURE_WRAP_S =>16#2802#, TEXTURE_WRAP_T =>16#2803#,
TEXTURE_PRIORITY =>16#8066#);FOR TEXPARAMVENM'SIZE USE GL.ENUM'SIZE;TYPE GETTEXPARAMENM IS (TEXTURE_BORDER_COLOR, TEXTURE_MAG_FILTER, TEXTURE_MIN_FILTER,
TEXTURE_WRAP_S, TEXTURE_WRAP_T, TEXTURE_PRIORITY, TEXTURE_RESIDENT);FOR GETTEXPARAMENM USE (TEXTURE_BORDER_COLOR =>16#1004#, TEXTURE_MAG_FILTER =>16#2800#,
TEXTURE_MIN_FILTER =>16#2801#, TEXTURE_WRAP_S =>16#2802#, TEXTURE_WRAP_T =>16#2803#, TEXTURE_PRIORITY =>16#8066#, TEXTURE_RESIDENT =>16#8067#);
FOR GETTEXPARAMENM'SIZE USE GL.ENUM'SIZE;TYPE TARGETTEXLEVELENM IS (TEXTURE_1D, TEXTURE_2D, PROXY_TEXTURE_1D, PROXY_TEXTURE_2D);FOR TARGETTEXLEVELENM USE
 (TEXTURE_1D =>16#0DE0#, TEXTURE_2D =>16#0DE1#, PROXY_TEXTURE_1D =>16#8063#, PROXY_TEXTURE_2D =>16#8064#);FOR TARGETTEXLEVELENM'SIZE USE GL.ENUM'SIZE;
TYPE TEXLEVELPARAMETERENM IS (TEXTURE_WIDTH, TEXTURE_HEIGHT, TEXTURE_COMPONENTS, TEXTURE_BORDER, TEXTURE_RED_SIZE, TEXTURE_GREEN_SIZE, TEXTURE_BLUE_SIZE,
TEXTURE_ALPHA_SIZE, TEXTURE_LUMINANCE_SIZE, TEXTURE_INTENSITY_SIZE, TEXTURE_INTERNAL_FORMAT);FOR TEXLEVELPARAMETERENM USE (TEXTURE_WIDTH =>16#1000#,
TEXTURE_HEIGHT =>16#1001#, TEXTURE_COMPONENTS =>16#1003#, TEXTURE_BORDER =>16#1005#, TEXTURE_RED_SIZE =>16#805C#, TEXTURE_GREEN_SIZE =>16#805D#,
TEXTURE_BLUE_SIZE =>16#805E#, TEXTURE_ALPHA_SIZE =>16#805F#, TEXTURE_LUMINANCE_SIZE =>16#8060#, TEXTURE_INTENSITY_SIZE =>16#8061#, TEXTURE_INTERNAL_FORMAT =>16#FFFF#
);FOR TEXLEVELPARAMETERENM'SIZE USE GL.ENUM'SIZE;TYPE TARGETTEX1DENM IS (TEXTURE_1D, PROXY_TEXTURE_1D);FOR TARGETTEX1DENM USE (TEXTURE_1D =>16#0DE0#,
PROXY_TEXTURE_1D =>16#8063#);FOR TARGETTEX1DENM'SIZE USE GL.ENUM'SIZE;TYPE TEXFORMATENM IS (ALPHA, RGB, RGBA, LUMINANCE, LUMINANCE_ALPHA, R3_G3_B2,
ALPHA4, ALPHA8, ALPHA12, ALPHA16, LUMINANCE4, LUMINANCE8, LUMINANCE12, LUMINANCE16, LUMINANCE4_ALPHA4, LUMINANCE6_ALPHA2, LUMINANCE8_ALPHA8, LUMINANCE12_ALPHA4,
LUMINANCE12_ALPHA12, LUMINANCE16_ALPHA16, INTENSITY, INTENSITY4, INTENSITY8, INTENSITY12, INTENSITY16, RGB4, RGB5, RGB8, RGB10, RGB12, RGB16, RGBA2,
RGBA4, RGB5_A1, RGBA8, RGB10_A2, RGBA12, RGBA16, BGR, BGRA);FOR TEXFORMATENM USE (ALPHA =>16#1906#, RGB =>16#1907#, RGBA =>16#1908#, LUMINANCE =>16#1909#,
LUMINANCE_ALPHA =>16#190A#, R3_G3_B2 =>16#2A10#, ALPHA4 =>16#803B#, ALPHA8 =>16#803C#, ALPHA12 =>16#803D#, ALPHA16 =>16#803E#, LUMINANCE4 =>16#803F#,
LUMINANCE8 =>16#8040#, LUMINANCE12 =>16#8041#, LUMINANCE16 =>16#8042#, LUMINANCE4_ALPHA4 =>16#8043#, LUMINANCE6_ALPHA2 =>16#8044#, LUMINANCE8_ALPHA8 =>16#8045#,
LUMINANCE12_ALPHA4 =>16#8046#, LUMINANCE12_ALPHA12 =>16#8047#, LUMINANCE16_ALPHA16 =>16#8048#, INTENSITY =>16#8049#, INTENSITY4 =>16#804A#, INTENSITY8 =>16#804B#,
INTENSITY12 =>16#804C#, INTENSITY16 =>16#804D#, RGB4 =>16#804F#, RGB5 =>16#8050#, RGB8 =>16#8051#, RGB10 =>16#8052#, RGB12 =>16#8053#, RGB16 =>16#8054#,
RGBA2 =>16#8055#, RGBA4 =>16#8056#, RGB5_A1 =>16#8057#, RGBA8 =>16#8058#, RGB10_A2 =>16#8059#, RGBA12 =>16#805A#, RGBA16 =>16#805B#, BGR =>16#80E0#, BGRA =>16#80E1#
);FOR TEXFORMATENM'SIZE USE GL.ENUM'SIZE;TYPE TEXPIXELFORMATENM IS (COLOR_INDEX, RED, GREEN, BLUE, ALPHA, RGB, RGBA, LUMINANCE, LUMINANCE_ALPHA
);FOR TEXPIXELFORMATENM USE (COLOR_INDEX =>16#1900#, RED =>16#1903#, GREEN =>16#1904#, BLUE =>16#1905#, ALPHA =>16#1906#, RGB =>16#1907#, RGBA =>16#1908#,
LUMINANCE =>16#1909#, LUMINANCE_ALPHA =>16#190A#);FOR TEXPIXELFORMATENM'SIZE USE GL.ENUM'SIZE;TYPE TARGETTEX2DENM IS (TEXTURE_2D, PROXY_TEXTURE_2D
);FOR TARGETTEX2DENM USE (TEXTURE_2D =>16#0DE1#, PROXY_TEXTURE_2D =>16#8064#);FOR TARGETTEX2DENM'SIZE USE GL.ENUM'SIZE;TYPE TEXIMAGEFORMATENM IS
 (RED, GREEN, BLUE, ALPHA, RGB, RGBA, LUMINANCE, LUMINANCE_ALPHA);FOR TEXIMAGEFORMATENM USE (RED =>16#1903#, GREEN =>16#1904#, BLUE =>16#1905#, ALPHA =>16#1906#,
RGB =>16#1907#, RGBA =>16#1908#, LUMINANCE =>16#1909#, LUMINANCE_ALPHA =>16#190A#);FOR TEXIMAGEFORMATENM'SIZE USE GL.ENUM'SIZE;TYPE TARGETTEX1DONLYENM IS
 (TEXTURE_1D);FOR TARGETTEX1DONLYENM USE (TEXTURE_1D =>16#0DE0#);FOR TARGETTEX1DONLYENM'SIZE USE GL.ENUM'SIZE;TYPE TARGETTEX2DONLYENM IS
 (TEXTURE_2D);FOR TARGETTEX2DONLYENM USE (TEXTURE_2D =>16#0DE1#);FOR TARGETTEX2DONLYENM'SIZE USE GL.ENUM'SIZE;TYPE TARGETTEX3DENM IS (
TEXTURE_3D_EXT, PROXY_TEXTURE_3D_EXT);FOR TARGETTEX3DENM USE (TEXTURE_3D_EXT =>16#806F#, PROXY_TEXTURE_3D_EXT =>16#8070#);FOR TARGETTEX3DENM'SIZE USE GL.ENUM'SIZE;
TYPE TARGETTEX3DONLYENM IS (TEXTURE_3D_EXT);FOR TARGETTEX3DONLYENM USE (TEXTURE_3D_EXT =>16#806F#);FOR TARGETTEX3DONLYENM'SIZE USE GL.ENUM'SIZE;
OBJECT_LINEAR:CONSTANT :=16#2401#;EYE_LINEAR:CONSTANT :=16#2400#;SPHERE_MAP:CONSTANT :=16#2402#;NEAREST_MIPMAP_NEAREST:CONSTANT :=16#2700#;
NEAREST_MIPMAP_LINEAR:CONSTANT :=16#2702#;LINEAR_MIPMAP_NEAREST:CONSTANT :=16#2701#;LINEAR_MIPMAP_LINEAR:CONSTANT :=16#2703#;DECAL:CONSTANT :=16#2101#;
MODULATE:CONSTANT :=16#2100#;NEAREST:CONSTANT :=16#2600#;REPEAT:CONSTANT :=16#2901#;CLAMP:CONSTANT :=16#2900#;CLAMP_TO_EDGE:CONSTANT :=16#812F#;
CLAMP_TO_BORDER:CONSTANT :=16#812D#;PROCEDURE TEXGEND (COORD:TEXCOORDENM;PNAME:TEXPARAMETERENM;PARAM:GL.DOUBLE);PROCEDURE TEXGENF (COORD:TEXCOORDENM;
PNAME:TEXPARAMETERENM;PARAM:GL.FLOAT);PROCEDURE TEXGENI (COORD:TEXCOORDENM;PNAME:TEXPARAMETERENM;PARAM:GL.INT);PROCEDURE TEXGENDV (COORD:TEXCOORDENM;
PNAME:TEXPARAMETERVENM;PARAMS:GL.DOUBLEPTR);PROCEDURE TEXGENFV (COORD:TEXCOORDENM;PNAME:TEXPARAMETERVENM;PARAMS:FLOATPTR);PROCEDURE TEXGENIV (COORD:TEXCOORDENM;
PNAME:TEXPARAMETERVENM;PARAMS:GL.INTPOINTER);PROCEDURE GETTEXGENDV (COORD:TEXCOORDENM;PNAME:TEXPARAMETERVENM;PARAMS:GL.DOUBLEPTR);PROCEDURE GETTEXGENFV (COORD:TEXCOORDENM;
PNAME:TEXPARAMETERVENM;PARAMS:FLOATPTR);PROCEDURE GETTEXGENIV (COORD:TEXCOORDENM;PNAME:TEXPARAMETERVENM;PARAMS:GL.INTPOINTER);PROCEDURE TEXENVF (TARGET:TEXENVENM;
PNAME:TEXENVPARAMETERENM;PARAM:GL.FLOAT);PROCEDURE TEXENV (TARGET:TEXENVENM;PNAME:TEXENVPARAMETERENM;PARAM:GL.INT);PROCEDURE TEXENVFV (TARGET:TEXENVENM;
PNAME:TEXENVPARAMETERVENM;PARAMS:FLOATPTR);PROCEDURE TEXENVIV (TARGET:TEXENVENM;PNAME:TEXENVPARAMETERVENM;PARAMS:GL.INTPOINTER);PROCEDURE GETTEXENVFV (TARGET:TEXENVENM;
PNAME:TEXENVPARAMETERVENM;PARAMS:FLOATPTR);PROCEDURE GETTEXENVIV (TARGET:TEXENVENM;PNAME:TEXENVPARAMETERVENM;PARAMS:GL.INTPOINTER);PROCEDURE TEXPARAMETERF (TARGET:TARGETTEXENM;
PNAME:TEXPARAMENM;PARAM:GL.FLOAT);PROCEDURE TEXPARAMETER (TARGET:TARGETTEXENM;PNAME:TEXPARAMENM;PARAM:GL.INT);PROCEDURE TEXPARAMETERFV (TARGET:TARGETTEXENM;
PNAME:TEXPARAMVENM;PARAMS:FLOATPTR);PROCEDURE TEXPARAMETERIV (TARGET:TARGETTEXENM;PNAME:TEXPARAMVENM;PARAMS:GL.INTPOINTER);PROCEDURE GETTEXPARAMETERFV (TARGET:TARGETTEXENM;
PNAME:GETTEXPARAMENM;PARAMS:FLOATPTR);PROCEDURE GETTEXPARAMETERIV (TARGET:TARGETTEXENM;PNAME:GETTEXPARAMENM;PARAMS:GL.INTPOINTER);PROCEDURE GETTEXLEVELPARAMETERFV (TARGET:TARGETTEXLEVELENM;
LEVEL:GL.INT;PNAME:TEXLEVELPARAMETERENM;PARAMS:FLOATPTR);PROCEDURE GETTEXLEVELPARAMETERIV (TARGET:TARGETTEXLEVELENM;LEVEL:GL.INT;PNAME:TEXLEVELPARAMETERENM;
PARAMS:GL.INTPOINTER);PROCEDURE TEXIMAGE1D (TARGET:TARGETTEX1DENM;LEVEL:GL.INT;INTERNALFORMAT:TEXFORMATENM;WIDTH:GL.SIZEI;BORDER:GL.INT;
FORMAT:TEXPIXELFORMATENM;C_TYPE:PIXELDATATYPEENM;PIXELS:GL.POINTER);PROCEDURE TEXIMAGE2D (TARGET:TARGETTEX2DENM;LEVEL:GL.INT;INTERNALFORMAT:TEXFORMATENM;
WIDTH:GL.SIZEI;HEIGHT:GL.SIZEI;BORDER:GL.INT;FORMAT:TEXPIXELFORMATENM;C_TYPE:PIXELDATATYPEENM;PIXELS:GL.POINTER);PROCEDURE GETTEXIMAGE (TARGET:TARGETTEXENM;
LEVEL:GL.INT;FORMAT:TEXIMAGEFORMATENM;C_TYPE:PIXELDATATYPEENM;PIXELS:GL.POINTER);PROCEDURE GENTEXTURES (N:GL.SIZEI;TEXTURES:GL.UINTPTR);
PROCEDURE DELETETEXTURES (N:GL.SIZEI;TEXTURES:GL.UINTPTR);PROCEDURE BINDTEXTURE (TARGET:TARGETTEXENM;TEXTURE:GL.UINT);PROCEDURE PRIORITIZETEXTURES (N:GL.SIZEI;
TEXTURES:GL.UINTPTR;PRIORITIES:GL.CLAMPFPTR);FUNCTION ARETEXTURESRESIDENT (N:GL.SIZEI;TEXTURES:GL.UINTPTR;RESIDENCES:GL_BOOLEANPTR)RETURN GL_BOOLEAN;
FUNCTION ISTEXTURE (TEXTURE:GL.UINT)RETURN GL_BOOLEAN;PROCEDURE TEXSUBIMAGE1D (TARGET:TARGETTEX1DONLYENM;LEVEL:GL.INT;XOFFSET:GL.INT;WIDTH:GL.SIZEI;
FORMAT:TEXPIXELFORMATENM;C_TYPE:PIXELDATATYPEENM;PIXELS:GL.POINTER);PROCEDURE TEXSUBIMAGE2D (TARGET:TARGETTEX2DONLYENM;LEVEL:GL.INT;XOFFSET:GL.INT;
YOFFSET:GL.INT;WIDTH:GL.SIZEI;HEIGHT:GL.SIZEI;FORMAT:TEXPIXELFORMATENM;C_TYPE:PIXELDATATYPEENM;PIXELS:GL.POINTER);PROCEDURE COPYTEXIMAGE1D (TARGET:TARGETTEX1DONLYENM;
LEVEL:GL.INT;INTERNALFORMAT:TEXFORMATENM;X:GL.INT;Y:GL.INT;WIDTH:GL.SIZEI;BORDER:GL.INT);PROCEDURE COPYTEXIMAGE2D (TARGET:TARGETTEX2DONLYENM;
LEVEL:GL.INT;INTERNALFORMAT:TEXFORMATENM;X:GL.INT;Y:GL.INT;WIDTH:GL.SIZEI;HEIGHT:GL.SIZEI;BORDER:GL.INT);PROCEDURE COPYTEXSUBIMAGE1D (TARGET:TARGETTEX1DONLYENM;
LEVEL:GL.INT;XOFFSET:GL.INT;X:GL.INT;Y:GL.INT;WIDTH:GL.SIZEI);PROCEDURE COPYTEXSUBIMAGE2D (TARGET:TARGETTEX2DONLYENM;LEVEL:GL.INT;XOFFSET:GL.INT;
YOFFSET:GL.INT;X:GL.INT;Y:GL.INT;WIDTH:GL.SIZEI;HEIGHT:GL.SIZEI);PROCEDURE TEXIMAGE3DEXT (TARGET:TARGETTEX3DENM;LEVEL:GL.INT;INTERNALFORMAT:TEXPIXELFORMATENM;
WIDTH:GL.SIZEI;HEIGHT:GL.SIZEI;DEPTH:GL.SIZEI;BORDER:GL.INT;FORMAT:TEXPIXELFORMATENM;C_TYPE:PIXELDATATYPEENM;PIXELS:GL.POINTER);PROCEDURE TEXSUBIMAGE3DEXT (TARGET:TARGETTEX3DONLYENM;
LEVEL:GL.INT;XOFFSET:GL.INT;YOFFSET:GL.INT;ZOFFSET:GL.INT;WIDTH:GL.SIZEI;HEIGHT:GL.SIZEI;DEPTH:GL.SIZEI;FORMAT:TEXPIXELFORMATENM;C_TYPE:PIXELDATATYPEENM;
PIXELS:GL.POINTER);PROCEDURE COPYTEXSUBIMAGE3DEXT (TARGET:TARGETTEX3DONLYENM;LEVEL:GL.INT;XOFFSET:GL.INT;YOFFSET:GL.INT;ZOFFSET:GL.INT;
X:GL.INT;Y:GL.INT;WIDTH:GL.SIZEI;HEIGHT:GL.SIZEI);TYPE MAP1TARGETENM IS (MAP1_COLOR_4, MAP1_INDEX, MAP1_NORMAL, MAP1_TEXTURE_COORD_1, MAP1_TEXTURE_COORD_2,
MAP1_TEXTURE_COORD_3, MAP1_TEXTURE_COORD_4, MAP1_VERTEX_3, MAP1_VERTEX_4);FOR MAP1TARGETENM USE (MAP1_COLOR_4 =>16#0D90#, MAP1_INDEX =>16#0D91#,
MAP1_NORMAL =>16#0D92#, MAP1_TEXTURE_COORD_1 =>16#0D93#, MAP1_TEXTURE_COORD_2 =>16#0D94#, MAP1_TEXTURE_COORD_3 =>16#0D95#, MAP1_TEXTURE_COORD_4 =>16#0D96#,
MAP1_VERTEX_3 =>16#0D97#, MAP1_VERTEX_4 =>16#0D98#);FOR MAP1TARGETENM'SIZE USE GL.ENUM'SIZE;TYPE MAP2TARGETENM IS (MAP2_COLOR_4, MAP2_INDEX,
MAP2_NORMAL, MAP2_TEXTURE_COORD_1, MAP2_TEXTURE_COORD_2, MAP2_TEXTURE_COORD_3, MAP2_TEXTURE_COORD_4, MAP2_VERTEX_3, MAP2_VERTEX_4);FOR MAP2TARGETENM USE
 (MAP2_COLOR_4 =>16#0DB0#, MAP2_INDEX =>16#0DB1#, MAP2_NORMAL =>16#0DB2#, MAP2_TEXTURE_COORD_1 =>16#0DB3#, MAP2_TEXTURE_COORD_2 =>16#0DB4#, MAP2_TEXTURE_COORD_3 =>16#0DB5#,
MAP2_TEXTURE_COORD_4 =>16#0DB6#, MAP2_VERTEX_3 =>16#0DB7#, MAP2_VERTEX_4 =>16#0DB8#);FOR MAP2TARGETENM'SIZE USE GL.ENUM'SIZE;TYPE MAPTARGETENM IS
 (MAP1_COLOR_4, MAP1_INDEX, MAP1_NORMAL, MAP1_TEXTURE_COORD_1, MAP1_TEXTURE_COORD_2, MAP1_TEXTURE_COORD_3, MAP1_TEXTURE_COORD_4, MAP1_VERTEX_3,
MAP1_VERTEX_4, MAP2_COLOR_4, MAP2_INDEX, MAP2_NORMAL, MAP2_TEXTURE_COORD_1, MAP2_TEXTURE_COORD_2, MAP2_TEXTURE_COORD_3, MAP2_TEXTURE_COORD_4,
MAP2_VERTEX_3, MAP2_VERTEX_4);FOR MAPTARGETENM USE (MAP1_COLOR_4 =>16#0D90#, MAP1_INDEX =>16#0D91#, MAP1_NORMAL =>16#0D92#, MAP1_TEXTURE_COORD_1 =>16#0D93#,
MAP1_TEXTURE_COORD_2 =>16#0D94#, MAP1_TEXTURE_COORD_3 =>16#0D95#, MAP1_TEXTURE_COORD_4 =>16#0D96#, MAP1_VERTEX_3 =>16#0D97#, MAP1_VERTEX_4 =>16#0D98#,
MAP2_COLOR_4 =>16#0DB0#, MAP2_INDEX =>16#0DB1#, MAP2_NORMAL =>16#0DB2#, MAP2_TEXTURE_COORD_1 =>16#0DB3#, MAP2_TEXTURE_COORD_2 =>16#0DB4#, MAP2_TEXTURE_COORD_3 =>16#0DB5#,
MAP2_TEXTURE_COORD_4 =>16#0DB6#, MAP2_VERTEX_3 =>16#0DB7#, MAP2_VERTEX_4 =>16#0DB8#);FOR MAPTARGETENM'SIZE USE GL.ENUM'SIZE;TYPE MAPQUERYENM IS
 (COEFF, ORDER, DOMAIN);FOR MAPQUERYENM USE (COEFF =>16#0A00#, ORDER =>16#0A01#, DOMAIN =>16#0A02#);FOR MAPQUERYENM'SIZE USE GL.ENUM'SIZE;TYPE MESH1MODEENM IS
 (POINT, LINE);FOR MESH1MODEENM USE (POINT =>16#1B00#, LINE =>16#1B01#);FOR MESH1MODEENM'SIZE USE GL.ENUM'SIZE;TYPE MESH2MODEENM IS (POINT,
LINE, FILL);FOR MESH2MODEENM USE (POINT =>16#1B00#, LINE =>16#1B01#, FILL =>16#1B02#);FOR MESH2MODEENM'SIZE USE GL.ENUM'SIZE;PROCEDURE MAP1D (TARGET:MAP1TARGETENM;
U1:GL.DOUBLE;U2:GL.DOUBLE;STRIDE:GL.INT;ORDER:GL.INT;POINTS:GL.DOUBLEPTR);PROCEDURE MAP1F (TARGET:MAP1TARGETENM;U1:GL.FLOAT;U2:GL.FLOAT;
STRIDE:GL.INT;ORDER:GL.INT;POINTS:FLOATPTR);PROCEDURE MAP2D (TARGET:MAP2TARGETENM;U1:GL.DOUBLE;U2:GL.DOUBLE;USTRIDE:GL.INT;UORDER:GL.INT;
V1:GL.DOUBLE;V2:GL.DOUBLE;VSTRIDE:GL.INT;VORDER:GL.INT;POINTS:GL.DOUBLEPTR);PROCEDURE MAP2F (TARGET:MAP2TARGETENM;U1:GL.FLOAT;U2:GL.FLOAT;
USTRIDE:GL.INT;UORDER:GL.INT;V1:GL.FLOAT;V2:GL.FLOAT;VSTRIDE:GL.INT;VORDER:GL.INT;POINTS:FLOATPTR);PROCEDURE GETMAPDV (TARGET:MAPTARGETENM;
QUERY:MAPQUERYENM;V:GL.DOUBLEPTR);PROCEDURE GETMAPFV (TARGET:MAPTARGETENM;QUERY:MAPQUERYENM;V:FLOATPTR);PROCEDURE GETMAPIV (TARGET:MAPTARGETENM;
QUERY:MAPQUERYENM;V:GL.INTPOINTER);PROCEDURE EVALPOINT1 (I:GL.INT);PROCEDURE EVALPOINT2 (I:GL.INT;J:GL.INT);PROCEDURE EVALMESH1 (MODE:MESH1MODEENM;
I1:GL.INT;I2:GL.INT);PROCEDURE EVALMESH2 (MODE:MESH2MODEENM;I1:GL.INT;I2:GL.INT;J1:GL.INT;J2:GL.INT);PROCEDURE EVALCOORD1D (U:GL.DOUBLE);
PROCEDURE EVALCOORD1F (U:GL.FLOAT);PROCEDURE EVALCOORD1DV (U:GL.DOUBLEPTR);PROCEDURE EVALCOORD1FV (U:FLOATPTR);PROCEDURE EVALCOORD2D (U:GL.DOUBLE;
V:GL.DOUBLE);PROCEDURE EVALCOORD2F (U:GL.FLOAT;V:GL.FLOAT);PROCEDURE EVALCOORD2DV (U:GL.DOUBLEPTR);PROCEDURE EVALCOORD2FV (U:FLOATPTR);PROCEDURE MAPGRID1D (UN:GL.INT;
U1:GL.DOUBLE;U2:GL.DOUBLE);PROCEDURE MAPGRID1F (UN:GL.INT;U1:GL.FLOAT;U2:GL.FLOAT);PROCEDURE MAPGRID2D (UN:GL.INT;U1:GL.DOUBLE;U2:GL.DOUBLE;
VN:GL.INT;V1:GL.DOUBLE;V2:GL.DOUBLE);PROCEDURE MAPGRID2F (UN:GL.INT;U1:GL.FLOAT;U2:GL.FLOAT;VN:GL.INT;V1:GL.FLOAT;V2:GL.FLOAT);TYPE FOGPARAMETERENM IS
 (FOG_INDEX, FOG_DENSITY, FOG_START, FOG_END, FOG_MODE);FOR FOGPARAMETERENM USE (FOG_INDEX =>16#0B61#, FOG_DENSITY =>16#0B62#, FOG_START =>16#0B63#,
FOG_END =>16#0B64#, FOG_MODE =>16#0B65#);FOR FOGPARAMETERENM'SIZE USE GL.ENUM'SIZE;TYPE FOGPARAMETERVENM IS (FOG_INDEX, FOG_DENSITY, FOG_START,
FOG_END, FOG_MODE, FOG_COLOR);FOR FOGPARAMETERVENM USE (FOG_INDEX =>16#0B61#, FOG_DENSITY =>16#0B62#, FOG_START =>16#0B63#, FOG_END =>16#0B64#,
FOG_MODE =>16#0B65#, FOG_COLOR =>16#0B66#);FOR FOGPARAMETERVENM'SIZE USE GL.ENUM'SIZE;LINEAR:CONSTANT :=16#2601#;EXP1:CONSTANT :=16#0800#;
EXP2:CONSTANT :=16#0801#;PROCEDURE FOGF (PNAME:FOGPARAMETERENM;PARAM:GL.FLOAT);PROCEDURE FOGI (PNAME:FOGPARAMETERENM;PARAM:GL.INT);PROCEDURE FOGFV (PNAME:FOGPARAMETERVENM;
PARAMS:FLOATPTR);PROCEDURE FOGIV (PNAME:FOGPARAMETERVENM;PARAMS:GL.INTPOINTER);TYPE FEEDBACKMODEENM IS (GL_2D, GL_3D, GL_3D_COLOR, GL_3D_COLOR_TEXTURE,
GL_4D_COLOR_TEXTURE);FOR FEEDBACKMODEENM USE (GL_2D =>16#0600#, GL_3D =>16#0601#, GL_3D_COLOR =>16#0602#, GL_3D_COLOR_TEXTURE =>16#0603#, GL_4D_COLOR_TEXTURE =>16#0604#
);FOR FEEDBACKMODEENM'SIZE USE GL.ENUM'SIZE;POINT_TOKEN:CONSTANT :=16#0701#;LINE_TOKEN:CONSTANT :=16#0702#;LINE_RESET_TOKEN:CONSTANT :=16#0707#;
POLYGON_TOKEN:CONSTANT :=16#0703#;BITMAP_TOKEN:CONSTANT :=16#0704#;DRAW_PIXEL_TOKEN:CONSTANT :=16#0705#;COPY_PIXEL_TOKEN:CONSTANT :=16#0706#;
PASS_THROUGH_TOKEN:CONSTANT :=16#0700#;FEEDBACK_BUFFER_SIZE:CONSTANT :=16#0DF1#;FEEDBACK_BUFFER_TYPE:CONSTANT :=16#0DF2#;PROCEDURE FEEDBACKBUFFER (SIZE:GL.SIZEI;
C_TYPE:FEEDBACKMODEENM;BUFFER:FLOATPTR);PROCEDURE PASSTHROUGH (TOKEN:GL.FLOAT);TYPE COLORTABLETARGETENM IS (TEXTURE_1D, TEXTURE_2D, PROXY_TEXTURE_1D,
PROXY_TEXTURE_2D, TEXTURE_3D_EXT, PROXY_TEXTURE_3D_EXT, SHARED_TEXTURE_PALETTE_EXT);FOR COLORTABLETARGETENM USE (TEXTURE_1D =>16#0DE0#, TEXTURE_2D =>16#0DE1#,
PROXY_TEXTURE_1D =>16#8063#, PROXY_TEXTURE_2D =>16#8064#, TEXTURE_3D_EXT =>16#806F#, PROXY_TEXTURE_3D_EXT =>16#8070#, SHARED_TEXTURE_PALETTE_EXT =>16#81FB#
);FOR COLORTABLETARGETENM'SIZE USE GL.ENUM'SIZE;TYPE GETCOLORTABLETARGETENM IS (TEXTURE_1D, TEXTURE_2D, TEXTURE_3D_EXT, SHARED_TEXTURE_PALETTE_EXT
);FOR GETCOLORTABLETARGETENM USE (TEXTURE_1D =>16#0DE0#, TEXTURE_2D =>16#0DE1#, TEXTURE_3D_EXT =>16#806F#, SHARED_TEXTURE_PALETTE_EXT =>16#81FB#
);FOR GETCOLORTABLETARGETENM'SIZE USE GL.ENUM'SIZE;TYPE COLORTABLEPARAMETERENM IS (COLOR_TABLE_FORMAT_EXT, COLOR_TABLE_WIDTH_EXT, COLOR_TABLE_RED_SIZE_EXT,
COLOR_TABLE_GREEN_SIZE_EXT, COLOR_TABLE_BLUE_SIZE_EXT, COLOR_TABLE_ALPHA_SIZE_EXT, COLOR_TABLE_LUMINANCE_SIZE_EXT, COLOR_TABLE_INTENSITY_SIZE_EXT
);FOR COLORTABLEPARAMETERENM USE (COLOR_TABLE_FORMAT_EXT =>16#80D8#, COLOR_TABLE_WIDTH_EXT =>16#80D9#, COLOR_TABLE_RED_SIZE_EXT =>16#80DA#,
COLOR_TABLE_GREEN_SIZE_EXT =>16#80DB#, COLOR_TABLE_BLUE_SIZE_EXT =>16#80DC#, COLOR_TABLE_ALPHA_SIZE_EXT =>16#80DD#, COLOR_TABLE_LUMINANCE_SIZE_EXT =>16#80DE#,
COLOR_TABLE_INTENSITY_SIZE_EXT =>16#80DF#);FOR COLORTABLEPARAMETERENM'SIZE USE GL.ENUM'SIZE;PROCEDURE COLORTABLEEXT (TARGET:COLORTABLETARGETENM;
INTERNALFORMAT:TEXFORMATENM;WIDTH:GL.SIZEI;FORMAT:TEXPIXELFORMATENM;C_TYPE:PIXELDATATYPEENM;TABLE:GL.POINTER);PROCEDURE COLORSUBTABLEEXT (TARGET:COLORTABLETARGETENM;
START:GL.SIZEI;COUNT:GL.SIZEI;FORMAT:TEXPIXELFORMATENM;C_TYPE:PIXELDATATYPEENM;DATA:GL.POINTER);PROCEDURE GETCOLORTABLEEXT (TARGET:GETCOLORTABLETARGETENM;
FORMAT:TEXPIXELFORMATENM;C_TYPE:PIXELDATATYPEENM;TABLE:GL.POINTER);PROCEDURE GETCOLORTABLEPARAMETERFVEXT (TARGET:GETCOLORTABLETARGETENM;
PNAME:COLORTABLEPARAMETERENM;PARAMS:FLOATPTR);PROCEDURE GETCOLORTABLEPARAMETERIVEXT (TARGET:GETCOLORTABLETARGETENM;PNAME:COLORTABLEPARAMETERENM;
PARAMS:GL.INTPOINTER);TYPE POINTPARAMETERENM IS (POINT_SIZE_MIN_EXT, POINT_SIZE_MAX_EXT, POINT_FADE_THRESHOLD_SIZE_EXT);FOR POINTPARAMETERENM USE
 (POINT_SIZE_MIN_EXT =>16#8126#, POINT_SIZE_MAX_EXT =>16#8127#, POINT_FADE_THRESHOLD_SIZE_EXT =>16#8128#);FOR POINTPARAMETERENM'SIZE USE GL.ENUM'SIZE;
TYPE POINTPARAMETERVENM IS (POINT_SIZE_MIN_EXT, POINT_SIZE_MAX_EXT, POINT_FADE_THRESHOLD_SIZE_EXT, DISTANCE_ATTENUATION_EXT);FOR POINTPARAMETERVENM USE
 (POINT_SIZE_MIN_EXT =>16#8126#, POINT_SIZE_MAX_EXT =>16#8127#, POINT_FADE_THRESHOLD_SIZE_EXT =>16#8128#, DISTANCE_ATTENUATION_EXT =>16#8129#);
FOR POINTPARAMETERVENM'SIZE USE GL.ENUM'SIZE;PROCEDURE POINTPARAMETERFEXT (PNAME:POINTPARAMETERENM;PARAM:GL.FLOAT);PROCEDURE POINTPARAMETERFVEXT (PNAME:POINTPARAMETERVENM;
PARAMS:FLOATPTR);PROCEDURE CLEARINDEX (C:GL.FLOAT);PROCEDURE CLEARCOLOR (RED:GL.CLAMPF;GREEN:GL.CLAMPF;BLUE:GL.CLAMPF;ALPHA:GL.CLAMPF);PROCEDURE CLEAR (MASK:BITFIELD);
PROCEDURE CLEARDEPTH (DEPTH:GL.CLAMPD);PROCEDURE CLEARACCUM (RED:GL.FLOAT;GREEN:GL.FLOAT;BLUE:GL.FLOAT;ALPHA:GL.FLOAT);PROCEDURE INDEXMASK (MASK:GL.UINT);
PROCEDURE COLORMASK (RED:GL_BOOLEAN;GREEN:GL_BOOLEAN;BLUE:GL_BOOLEAN;ALPHA:GL_BOOLEAN);PROCEDURE POINTSIZE (SIZE:GL.FLOAT);PROCEDURE LINEWIDTH (WIDTH:GL.FLOAT);
PROCEDURE LINESTIPPLE (FACTOR:GL.INT;PATTERN:GL.USHORT);PROCEDURE POLYGONOFFSET (FACTOR:GL.FLOAT;UNITS:GL.FLOAT);PROCEDURE POLYGONSTIPPLE (MASK:UBYTEPTR);
PROCEDURE GETPOLYGONSTIPPLE (MASK:UBYTEPTR);PROCEDURE EDGEFLAG (FLAG:GL_BOOLEAN);PROCEDURE EDGEFLAGV (FLAG:GL_BOOLEANPTR);PROCEDURE SCISSOR (X:GL.INT;
Y:GL.INT;WIDTH:GL.SIZEI;HEIGHT:GL.SIZEI);PROCEDURE PUSHATTRIB (MASK:BITFIELD);PROCEDURE POPATTRIB;PROCEDURE PUSHCLIENTATTRIB (MASK:BITFIELD);
PROCEDURE POPCLIENTATTRIB;PROCEDURE FINISH;PROCEDURE FLUSH;PROCEDURE DEPTHMASK (FLAG:GL_BOOLEAN);PROCEDURE DEPTHRANGE (NEAR_VAL:GL.CLAMPD;
FAR_VAL:GL.CLAMPD);PROCEDURE ORTHO (LEFT:GL.DOUBLE;RIGHT:GL.DOUBLE;BOTTOM:GL.DOUBLE;TOP:GL.DOUBLE;NEAR_VAL:GL.DOUBLE;FAR_VAL:GL.DOUBLE);
PROCEDURE FRUSTUM (LEFT:GL.DOUBLE;RIGHT:GL.DOUBLE;BOTTOM:GL.DOUBLE;TOP:GL.DOUBLE;NEAR_VAL:GL.DOUBLE;FAR_VAL:GL.DOUBLE);PROCEDURE VIEWPORT (X:GL.INT;
Y:GL.INT;WIDTH:GL.SIZEI;HEIGHT:GL.SIZEI);PROCEDURE PUSHMATRIX;PROCEDURE POPMATRIX;PROCEDURE LOADIDENTITY;PROCEDURE LOADMATRIXD (M:GL.DOUBLEPTR);
PROCEDURE LOADMATRIXF (M:FLOATPTR);PROCEDURE MULTMATRIXD (M:GL.DOUBLEPTR);PROCEDURE MULTMATRIXF (M:FLOATPTR);PROCEDURE ROTATE (ANGLE:GL.DOUBLE;
X:GL.DOUBLE;Y:GL.DOUBLE;Z:GL.DOUBLE);PROCEDURE ROTATE_F (ANGLE:GL.FLOAT;X:GL.FLOAT;Y:GL.FLOAT;Z:GL.FLOAT);PROCEDURE SCALE (X, Y, Z:GL.DOUBLE);
PROCEDURE SCALE_F (X, Y, Z:GL.FLOAT);PROCEDURE TRANSLATE (X, Y, Z:GL.DOUBLE);PROCEDURE TRANSLATE_F (X, Y, Z:GL.FLOAT);PROCEDURE TRANSLATE (V:DOUBLE_VECTOR_3D);
PRAGMA INLINE (TRANSLATE);PROCEDURE VERTEX (X, Y:GL.DOUBLE);PROCEDURE VERTEX_F (X, Y:GL.FLOAT);PROCEDURE VERTEX (X, Y:GL.INT);PROCEDURE VERTEX_S (X, Y:GL.SHORT);
PROCEDURE VERTEX (X, Y, Z:GL.DOUBLE);PROCEDURE VERTEX_F (X, Y, Z:GL.FLOAT);PROCEDURE VERTEX (X, Y, Z:GL.INT);PROCEDURE VERTEX_S (X, Y, Z:GL.SHORT);
PROCEDURE VERTEX (X, Y, Z, W:GL.DOUBLE);PROCEDURE VERTEX_F (X, Y, Z, W:GL.FLOAT);PROCEDURE VERTEX (X, Y, Z, W:GL.INT);PROCEDURE VERTEX_S (X, Y, Z, W:GL.SHORT);
PROCEDURE VERTEX (V:DOUBLE_VECTOR_3D);PRAGMA INLINE (VERTEX);PROCEDURE VERTEX2DV (V:GL.DOUBLEPTR);PROCEDURE VERTEX2FV (V:FLOATPTR);PROCEDURE VERTEX2IV (V:GL.INTPOINTER);
PROCEDURE VERTEX2SV (V:GL.SHORTPTR);PROCEDURE VERTEX3DV (V:GL.DOUBLEPTR);PROCEDURE VERTEX3FV (V:FLOATPTR);PROCEDURE VERTEX3IV (V:GL.INTPOINTER);
PROCEDURE VERTEX3SV (V:GL.SHORTPTR);PROCEDURE VERTEX4DV (V:GL.DOUBLEPTR);PROCEDURE VERTEX4FV (V:FLOATPTR);PROCEDURE VERTEX4IV (V:GL.INTPOINTER);
PROCEDURE VERTEX4SV (V:GL.SHORTPTR);PROCEDURE NORMAL (X, Y, Z:GL.DOUBLE);PROCEDURE NORMAL_F (X, Y, Z:GL.FLOAT);PROCEDURE NORMAL (X, Y, Z:GL.INT);
PROCEDURE NORMAL_B (X, Y, Z:GL.BYTE);PROCEDURE NORMAL_S (X, Y, Z:GL.SHORT);PROCEDURE NORMAL (V:DOUBLE_VECTOR_3D);PRAGMA INLINE (NORMAL);PROCEDURE NORMAL3BV (V:GL.BYTEPTR);
PROCEDURE NORMAL3DV (V:GL.DOUBLEPTR);PROCEDURE NORMAL3FV (V:FLOATPTR);PROCEDURE NORMAL3IV (V:GL.INTPOINTER);PROCEDURE NORMAL3SV (V:GL.SHORTPTR);
PROCEDURE INDEXD (C:GL.DOUBLE);PROCEDURE INDEXF (C:GL.FLOAT);PROCEDURE INDEXI (C:GL.INT);PROCEDURE INDEXS (C:GL.SHORT);PROCEDURE INDEXUB (C:GL.UBYTE);
PROCEDURE INDEXDV (C:GL.DOUBLEPTR);PROCEDURE INDEXFV (C:FLOATPTR);PROCEDURE INDEXIV (C:GL.INTPOINTER);PROCEDURE INDEXSV (C:GL.SHORTPTR);PROCEDURE INDEXUBV (C:UBYTEPTR);
PROCEDURE COLOR3B (RED:GL.BYTE;GREEN:GL.BYTE;BLUE:GL.BYTE);PROCEDURE COLOR (RED, GREEN, BLUE:GL.DOUBLE);PROCEDURE COLOR_F (RED, GREEN, BLUE:GL.FLOAT);
PROCEDURE COLOR (RED, GREEN, BLUE:GL.INT);PROCEDURE COLOR_S (RED, GREEN, BLUE:GL.SHORT);PROCEDURE COLOR3UB (RED:GL.UBYTE;GREEN:GL.UBYTE;BLUE:GL.UBYTE);
PROCEDURE COLOR3UI (RED:GL.UINT;GREEN:GL.UINT;BLUE:GL.UINT);PROCEDURE COLOR3US (RED:GL.USHORT;GREEN:GL.USHORT;BLUE:GL.USHORT);PROCEDURE COLOR4B (RED:GL.BYTE;
GREEN:GL.BYTE;BLUE:GL.BYTE;ALPHA:GL.BYTE);PROCEDURE COLOR (RED, GREEN, BLUE, ALPHA:GL.DOUBLE);PROCEDURE COLOR_F (RED, GREEN, BLUE, ALPHA:GL.FLOAT);
PROCEDURE COLOR (RED, GREEN, BLUE, ALPHA:GL.INT);PROCEDURE COLOR_S (RED, GREEN, BLUE, ALPHA:GL.SHORT);PROCEDURE COLOR4UB (RED:GL.UBYTE;GREEN:GL.UBYTE;
BLUE:GL.UBYTE;ALPHA:GL.UBYTE);PROCEDURE COLOR4UI (RED:GL.UINT;GREEN:GL.UINT;BLUE:GL.UINT;ALPHA:GL.UINT);PROCEDURE COLOR4US (RED:GL.USHORT;
GREEN:GL.USHORT;BLUE:GL.USHORT;ALPHA:GL.USHORT);PROCEDURE COLOR3BV (V:GL.BYTEPTR);PROCEDURE COLOR3DV (V:GL.DOUBLEPTR);PROCEDURE COLOR (V:RGB_COLOR);
PROCEDURE COLOR3FV (V:GL.FLOATPTR);PROCEDURE COLOR3IV (V:GL.INTPOINTER);PROCEDURE COLOR3SV (V:GL.SHORTPTR);PROCEDURE COLOR3UBV (V:GL.UBYTEPTR);
PROCEDURE COLOR3UIV (V:GL.UINTPTR);PROCEDURE COLOR3USV (V:GL.USHORTPTR);PROCEDURE COLOR4BV (V:GL.BYTEPTR);PROCEDURE COLOR4DV (V:GL.DOUBLEPTR);
PROCEDURE COLOR (V:RGBA_COLOR);PROCEDURE COLOR4FV (V:GL.FLOATPTR);PROCEDURE COLOR4IV (V:GL.INTPOINTER);PROCEDURE COLOR4SV (V:GL.SHORTPTR);
PROCEDURE COLOR4UBV (V:GL.UBYTEPTR);PROCEDURE COLOR4UIV (V:GL.UINTPTR);PROCEDURE COLOR4USV (V:GL.USHORTPTR);PROCEDURE TEXCOORD1D (S:GL.DOUBLE);
PROCEDURE TEXCOORD1F (S:GL.FLOAT);PROCEDURE TEXCOORD1I (S:GL.INT);PROCEDURE TEXCOORD1S (S:GL.SHORT);PROCEDURE TEXCOORD (S:GL.DOUBLE;T:GL.DOUBLE);
PROCEDURE TEXCOORDF (S:GL.FLOAT;T:GL.FLOAT);PROCEDURE TEXCOORD2I (S:GL.INT;T:GL.INT);PROCEDURE TEXCOORD2S (S:GL.SHORT;T:GL.SHORT);PROCEDURE TEXCOORD3D (S:GL.DOUBLE;
T:GL.DOUBLE;R:GL.DOUBLE);PROCEDURE TEXCOORD3F (S:GL.FLOAT;T:GL.FLOAT;R:GL.FLOAT);PROCEDURE TEXCOORD3I (S:GL.INT;T:GL.INT;R:GL.INT);PROCEDURE TEXCOORD3S (S:GL.SHORT;
T:GL.SHORT;R:GL.SHORT);PROCEDURE TEXCOORD4D (S:GL.DOUBLE;T:GL.DOUBLE;R:GL.DOUBLE;Q:GL.DOUBLE);PROCEDURE TEXCOORD4F (S:GL.FLOAT;T:GL.FLOAT;
R:GL.FLOAT;Q:GL.FLOAT);PROCEDURE TEXCOORD4I (S:GL.INT;T:GL.INT;R:GL.INT;Q:GL.INT);PROCEDURE TEXCOORD4S (S:GL.SHORT;T:GL.SHORT;R:GL.SHORT;
Q:GL.SHORT);PROCEDURE TEXCOORD1DV (V:GL.DOUBLEPTR);PROCEDURE TEXCOORD1FV (V:FLOATPTR);PROCEDURE TEXCOORD1IV (V:GL.INTPOINTER);PROCEDURE TEXCOORD1SV (V:GL.SHORTPTR);
PROCEDURE TEXCOORD2DV (V:GL.DOUBLEPTR);PROCEDURE TEXCOORD2FV (V:FLOATPTR);PROCEDURE TEXCOORD2IV (V:GL.INTPOINTER);PROCEDURE TEXCOORD2SV (V:GL.SHORTPTR);
PROCEDURE TEXCOORD3DV (V:GL.DOUBLEPTR);PROCEDURE TEXCOORD3FV (V:FLOATPTR);PROCEDURE TEXCOORD3IV (V:GL.INTPOINTER);PROCEDURE TEXCOORD3SV (V:GL.SHORTPTR);
PROCEDURE TEXCOORD4DV (V:GL.DOUBLEPTR);PROCEDURE TEXCOORD4FV (V:FLOATPTR);PROCEDURE TEXCOORD4IV (V:GL.INTPOINTER);PROCEDURE TEXCOORD4SV (V:GL.SHORTPTR);
PROCEDURE RASTERPOS2D (X:GL.DOUBLE;Y:GL.DOUBLE);PROCEDURE RASTERPOS2F (X:GL.FLOAT;Y:GL.FLOAT);PROCEDURE RASTERPOS (X, Y:GL.INT);PROCEDURE RASTERPOS2S (X:GL.SHORT;
Y:GL.SHORT);PROCEDURE RASTERPOS3D (X:GL.DOUBLE;Y:GL.DOUBLE;Z:GL.DOUBLE);PROCEDURE RASTERPOS3F (X:GL.FLOAT;Y:GL.FLOAT;Z:GL.FLOAT);PROCEDURE RASTERPOS3I (X:GL.INT;
Y:GL.INT;Z:GL.INT);PROCEDURE RASTERPOS3S (X:GL.SHORT;Y:GL.SHORT;Z:GL.SHORT);PROCEDURE RASTERPOS4D (X:GL.DOUBLE;Y:GL.DOUBLE;Z:GL.DOUBLE;W:GL.DOUBLE);
PROCEDURE RASTERPOS4F (X:GL.FLOAT;Y:GL.FLOAT;Z:GL.FLOAT;W:GL.FLOAT);PROCEDURE RASTERPOS4I (X:GL.INT;Y:GL.INT;Z:GL.INT;W:GL.INT);PROCEDURE RASTERPOS4S (X:GL.SHORT;
Y:GL.SHORT;Z:GL.SHORT;W:GL.SHORT);PROCEDURE RASTERPOS2DV (V:GL.DOUBLEPTR);PROCEDURE RASTERPOS2FV (V:FLOATPTR);PROCEDURE RASTERPOS2IV (V:GL.INTPOINTER);
PROCEDURE RASTERPOS2SV (V:GL.SHORTPTR);PROCEDURE RASTERPOS3DV (V:GL.DOUBLEPTR);PROCEDURE RASTERPOS3FV (V:FLOATPTR);PROCEDURE RASTERPOS3IV (V:GL.INTPOINTER);
PROCEDURE RASTERPOS3SV (V:GL.SHORTPTR);PROCEDURE RASTERPOS4DV (V:GL.DOUBLEPTR);PROCEDURE RASTERPOS4FV (V:FLOATPTR);PROCEDURE RASTERPOS4IV (V:GL.INTPOINTER);
PROCEDURE RASTERPOS4SV (V:GL.SHORTPTR);PROCEDURE RECTD (X1:GL.DOUBLE;Y1:GL.DOUBLE;X2:GL.DOUBLE;Y2:GL.DOUBLE);PROCEDURE RECTF (X1:GL.FLOAT;
Y1:GL.FLOAT;X2:GL.FLOAT;Y2:GL.FLOAT);PROCEDURE RECTI (X1:GL.INT;Y1:GL.INT;X2:GL.INT;Y2:GL.INT);PROCEDURE RECTS (X1:GL.SHORT;Y1:GL.SHORT;
X2:GL.SHORT;Y2:GL.SHORT);PROCEDURE RECTDV (V1:GL.DOUBLEPTR;V2:GL.DOUBLEPTR);PROCEDURE RECTFV (V1:FLOATPTR;V2:FLOATPTR);PROCEDURE RECTIV (V1:GL.INTPOINTER;
V2:GL.INTPOINTER);PROCEDURE RECTSV (V1:GL.SHORTPTR;V2:GL.SHORTPTR);PROCEDURE BITMAP (WIDTH:GL.SIZEI;HEIGHT:GL.SIZEI;XORIG:GL.FLOAT;YORIG:GL.FLOAT;
XMOVE:GL.FLOAT;YMOVE:GL.FLOAT;BITMAP:UBYTEPTR);PROCEDURE STENCILMASK (MASK:GL.UINT);PROCEDURE CLEARSTENCIL (S:GL.INT);PROCEDURE SELECTBUFFER (SIZE:GL.SIZEI;
BUFFER:GL.UINTPTR);PROCEDURE INITNAMES;PROCEDURE LOADNAME (NAME:GL.UINT);PROCEDURE PUSHNAME (NAME:GL.UINT);PROCEDURE POPNAME;PROCEDURE WINDOWPOS2IMESA (X:GL.INT;
Y:GL.INT);PROCEDURE WINDOWPOS2SMESA (X:GL.SHORT;Y:GL.SHORT);PROCEDURE WINDOWPOS2FMESA (X:GL.FLOAT;Y:GL.FLOAT);PROCEDURE WINDOWPOS2DMESA (X:GL.DOUBLE;
Y:GL.DOUBLE);PROCEDURE WINDOWPOS2IVMESA (P:GL.INTPOINTER);PROCEDURE WINDOWPOS2SVMESA (P:GL.SHORTPTR);PROCEDURE WINDOWPOS2FVMESA (P:FLOATPTR);
PROCEDURE WINDOWPOS2DVMESA (P:GL.DOUBLEPTR);PROCEDURE WINDOWPOS3IMESA (X:GL.INT;Y:GL.INT;Z:GL.INT);PROCEDURE WINDOWPOS3SMESA (X:GL.SHORT;
Y:GL.SHORT;Z:GL.SHORT);PROCEDURE WINDOWPOS3FMESA (X:GL.FLOAT;Y:GL.FLOAT;Z:GL.FLOAT);PROCEDURE WINDOWPOS3DMESA (X:GL.DOUBLE;Y:GL.DOUBLE;Z:GL.DOUBLE);
PROCEDURE WINDOWPOS3IVMESA (P:GL.INTPOINTER);PROCEDURE WINDOWPOS3SVMESA (P:GL.SHORTPTR);PROCEDURE WINDOWPOS3FVMESA (P:FLOATPTR);PROCEDURE WINDOWPOS3DVMESA (P:GL.DOUBLEPTR);
PROCEDURE WINDOWPOS4IMESA (X:GL.INT;Y:GL.INT;Z:GL.INT;W:GL.INT);PROCEDURE WINDOWPOS4SMESA (X:GL.SHORT;Y:GL.SHORT;Z:GL.SHORT;W:GL.SHORT);
PROCEDURE WINDOWPOS4FMESA (X:GL.FLOAT;Y:GL.FLOAT;Z:GL.FLOAT;W:GL.FLOAT);PROCEDURE WINDOWPOS4DMESA (X:GL.DOUBLE;Y:GL.DOUBLE;Z:GL.DOUBLE;W:GL.DOUBLE);
PROCEDURE WINDOWPOS4IVMESA (P:GL.INTPOINTER);PROCEDURE WINDOWPOS4SVMESA (P:GL.SHORTPTR);PROCEDURE WINDOWPOS4FVMESA (P:FLOATPTR);PROCEDURE WINDOWPOS4DVMESA (P:GL.DOUBLEPTR);
PROCEDURE RESIZEBUFFERSMESA;PROCEDURE GENBUFFERS (N:IN GL.SIZEI;BUFFERS:IN GL.UINTPTR);PROCEDURE DELETEBUFFERS (N:IN GL.SIZEI;BUFFERS:IN GL.UINTPTR);
TYPE VBO_TARGET IS (ARRAY_BUFFER, ELEMENT_ARRAY_BUFFER, PIXEL_PACK_BUFFER, PIXEL_UNPACK_BUFFER);FOR VBO_TARGET USE (ARRAY_BUFFER =>16#8892#,
ELEMENT_ARRAY_BUFFER =>16#8893#, PIXEL_PACK_BUFFER =>16#88EB#, PIXEL_UNPACK_BUFFER =>16#88EC#);PROCEDURE BINDBUFFER (TARGET:IN VBO_TARGET;BUFFER:IN GL.UINT);
TYPE VBO_USAGE IS (STREAM_DRAW, STREAM_READ, STREAM_COPY, STATIC_DRAW, STATIC_READ, STATIC_COPY, DYNAMIC_DRAW, DYNAMIC_READ, DYNAMIC_COPY);FOR VBO_USAGE USE
 (STREAM_DRAW =>16#88E0#, STREAM_READ =>16#88E1#, STREAM_COPY =>16#88E2#, STATIC_DRAW =>16#88E4#, STATIC_READ =>16#88E5#, STATIC_COPY =>16#88E6#, DYNAMIC_DRAW =>16#88E8#,
DYNAMIC_READ =>16#88E9#, DYNAMIC_COPY =>16#88EA#);PROCEDURE BUFFERDATA (TARGET:IN GL.VBO_TARGET;SIZE:IN GL.SIZEIPTR;DATA:IN GL.POINTER;USAGE:IN GL.VBO_USAGE);
PROCEDURE BUFFERSUBDATA (TARGET:IN GL.VBO_TARGET;OFFSET:IN GL.INTPTR;SIZE:IN GL.SIZEIPTR;DATA:IN GL.POINTER);TYPE ACCESS_POLICY IS (READ_ONLY,
WRITE_ONLY, READ_WRITE);FOR ACCESS_POLICY USE (READ_ONLY =>16#88B8#, WRITE_ONLY =>16#88B9#, READ_WRITE =>16#88BA#);FUNCTION MAPBUFFER (TARGET:IN GL.VBO_TARGET;
POLICY:IN GL.ACCESS_POLICY)RETURN GL.POINTER;FUNCTION UNMAPBUFFER (TARGET:IN GL.VBO_TARGET)RETURN GL_BOOLEAN;TYPE BUFFER_PARAMETER IS (
BUFFER_SIZE, BUFFER_USAGE, BUFFER_ACCESS, BUFFER_MAPPED);FOR BUFFER_PARAMETER USE (BUFFER_SIZE =>16#8764#, BUFFER_USAGE =>16#8765#, BUFFER_ACCESS =>16#88BB#,
BUFFER_MAPPED =>16#88BC#);PROCEDURE GETBUFFERPARAMETER (TARGET:IN GL.VBO_TARGET;VALUE:IN BUFFER_PARAMETER;DATA:IN INTPOINTER);PRIVATE FUNCTION GLGETSTRING (NAME:STRINGENM)RETURN UBYTEPTR;
FUNCTION GETSTRING (NAME:STRINGENM)RETURN UBYTEPTR RENAMES GLGETSTRING;PROCEDURE COLOR3D (RED, GREEN, BLUE:GL.DOUBLE);PROCEDURE COLOR (RED, GREEN, BLUE:GL.DOUBLE)RENAMES COLOR3D;
PROCEDURE COLOR3F (RED, GREEN, BLUE:GL.FLOAT);PROCEDURE COLOR_F (RED, GREEN, BLUE:GL.FLOAT)RENAMES COLOR3F;PROCEDURE COLOR3I (RED, GREEN, BLUE:GL.INT);
PROCEDURE COLOR (RED, GREEN, BLUE:GL.INT)RENAMES COLOR3I;PROCEDURE COLOR3S (RED, GREEN, BLUE:GL.SHORT);PROCEDURE COLOR_S (RED, GREEN, BLUE:GL.SHORT)RENAMES COLOR3S;
PROCEDURE COLOR4D (RED, GREEN, BLUE, ALPHA:GL.DOUBLE);PROCEDURE COLOR (RED, GREEN, BLUE, ALPHA:GL.DOUBLE)RENAMES COLOR4D;PROCEDURE COLOR4F (RED, GREEN, BLUE, ALPHA:GL.FLOAT);
PROCEDURE COLOR_F (RED, GREEN, BLUE, ALPHA:GL.FLOAT)RENAMES COLOR4F;PROCEDURE COLOR4I (RED, GREEN, BLUE, ALPHA:GL.INT);PROCEDURE COLOR (RED, GREEN, BLUE, ALPHA:GL.INT)RENAMES COLOR4I;
PROCEDURE COLOR4S (RED, GREEN, BLUE, ALPHA:GL.SHORT);PROCEDURE COLOR_S (RED, GREEN, BLUE, ALPHA:GL.SHORT)RENAMES COLOR4S;PROCEDURE GETDOUBLEV (PNAME:PARAMETERNAMEENM;
PARAMS:GL.DOUBLEPTR);PROCEDURE GET (PNAME:PARAMETERNAMEENM;PARAMS:GL.DOUBLEPTR)RENAMES GETDOUBLEV;PROCEDURE LIGHTF (LIGHT:LIGHTIDENM;PNAME:LIGHTPARAMETERENM;
PARAM:GL.FLOAT);PROCEDURE LIGHT (LIGHT:LIGHTIDENM;PNAME:LIGHTPARAMETERENM;PARAM:GL.FLOAT)RENAMES LIGHTF;PROCEDURE LIGHTFV (LIGHT:LIGHTIDENM;
PNAME:LIGHTPARAMETERVENM;PARAMS:FLOATPTR);PROCEDURE MATERIALF (FACE:FACEENM;PNAME:MATERIALPARAMETERENM;PARAM:GL.FLOAT);PROCEDURE MATERIAL (FACE:FACEENM;
PNAME:MATERIALPARAMETERENM;PARAM:GL.FLOAT)RENAMES MATERIALF;PROCEDURE MATERIALFV (FACE:FACEENM;PNAME:MATERIALPARAMETERVENM;PARAMS:FLOATPTR);
PROCEDURE NORMAL3D (X, Y, Z:GL.DOUBLE);PROCEDURE NORMAL (X, Y, Z:GL.DOUBLE)RENAMES NORMAL3D;PROCEDURE NORMAL3F (X, Y, Z:GL.FLOAT);PROCEDURE NORMAL_F (X, Y, Z:GL.FLOAT)RENAMES NORMAL3F;
PROCEDURE NORMAL3I (X, Y, Z:GL.INT);PROCEDURE NORMAL (X, Y, Z:GL.INT)RENAMES NORMAL3I;PROCEDURE NORMAL3B (X, Y, Z:GL.BYTE);PROCEDURE NORMAL_B (X, Y, Z:GL.BYTE)RENAMES NORMAL3B;
PROCEDURE NORMAL3S (X, Y, Z:GL.SHORT);PROCEDURE NORMAL_S (X, Y, Z:GL.SHORT)RENAMES NORMAL3S;PROCEDURE PIXELSTOREI (PNAME:PIXELSTORAGEENM;PARAM:GL.INT);
PROCEDURE PIXELSTORE (PNAME:PIXELSTORAGEENM;PARAM:GL.INT)RENAMES PIXELSTOREI;PROCEDURE RASTERPOS2I (X:GL.INT;Y:GL.INT);PROCEDURE RASTERPOS (X, Y:GL.INT)RENAMES RASTERPOS2I;
PROCEDURE ROTATED (ANGLE:GL.DOUBLE;X:GL.DOUBLE;Y:GL.DOUBLE;Z:GL.DOUBLE);PROCEDURE ROTATE (ANGLE:GL.DOUBLE;X:GL.DOUBLE;Y:GL.DOUBLE;Z:GL.DOUBLE)RENAMES ROTATED;
PROCEDURE ROTATEF (ANGLE:GL.FLOAT;X:GL.FLOAT;Y:GL.FLOAT;Z:GL.FLOAT);PROCEDURE ROTATE_F (ANGLE:GL.FLOAT;X:GL.FLOAT;Y:GL.FLOAT;Z:GL.FLOAT)RENAMES ROTATEF;
PROCEDURE SCALED (X, Y, Z:GL.DOUBLE);PROCEDURE SCALE (X, Y, Z:GL.DOUBLE)RENAMES SCALED;PROCEDURE SCALEF (X, Y, Z:GL.FLOAT);PROCEDURE SCALE_F (X, Y, Z:GL.FLOAT)RENAMES SCALEF;
PROCEDURE TEXCOORD2D (S:GL.DOUBLE;T:GL.DOUBLE);PROCEDURE TEXCOORD (S:GL.DOUBLE;T:GL.DOUBLE)RENAMES TEXCOORD2D;PROCEDURE TEXCOORD2F (S:GL.FLOAT;
T:GL.FLOAT);PROCEDURE TEXCOORDF (S:GL.FLOAT;T:GL.FLOAT)RENAMES TEXCOORD2F;PROCEDURE TEXENVI (TARGET:TEXENVENM;PNAME:TEXENVPARAMETERENM;PARAM:GL.INT);
PROCEDURE TEXENV (TARGET:TEXENVENM;PNAME:TEXENVPARAMETERENM;PARAM:GL.INT)RENAMES TEXENVI;PROCEDURE TEXPARAMETERI (TARGET:TARGETTEXENM;PNAME:TEXPARAMENM;
PARAM:GL.INT);PROCEDURE TEXPARAMETER (TARGET:TARGETTEXENM;PNAME:TEXPARAMENM;PARAM:GL.INT)RENAMES TEXPARAMETERI;PROCEDURE TRANSLATED (X, Y, Z:GL.DOUBLE);
PROCEDURE TRANSLATE (X, Y, Z:GL.DOUBLE)RENAMES TRANSLATED;PROCEDURE TRANSLATEF (X, Y, Z:GL.FLOAT);PROCEDURE TRANSLATE_F (X, Y, Z:GL.FLOAT)RENAMES TRANSLATEF;
PROCEDURE VERTEX2D (X, Y:GL.DOUBLE);PROCEDURE VERTEX (X, Y:GL.DOUBLE)RENAMES VERTEX2D;PROCEDURE VERTEX2F (X, Y:GL.FLOAT);PROCEDURE VERTEX_F (X, Y:GL.FLOAT)RENAMES VERTEX2F;
PROCEDURE VERTEX2I (X, Y:GL.INT);PROCEDURE VERTEX (X, Y:GL.INT)RENAMES VERTEX2I;PROCEDURE VERTEX2S (X, Y:GL.SHORT);PROCEDURE VERTEX_S (X, Y:GL.SHORT)RENAMES VERTEX2S;
PROCEDURE VERTEX3D (X, Y, Z:GL.DOUBLE);PROCEDURE VERTEX (X, Y, Z:GL.DOUBLE)RENAMES VERTEX3D;PROCEDURE VERTEX3F (X, Y, Z:GL.FLOAT);PROCEDURE VERTEX_F (X, Y, Z:GL.FLOAT)RENAMES VERTEX3F;
PROCEDURE VERTEX3I (X, Y, Z:GL.INT);PROCEDURE VERTEX (X, Y, Z:GL.INT)RENAMES VERTEX3I;PROCEDURE VERTEX3S (X, Y, Z:GL.SHORT);PROCEDURE VERTEX_S (X, Y, Z:GL.SHORT)RENAMES VERTEX3S;
PROCEDURE VERTEX4D (X, Y, Z, W:GL.DOUBLE);PROCEDURE VERTEX (X, Y, Z, W:GL.DOUBLE)RENAMES VERTEX4D;PROCEDURE VERTEX4F (X, Y, Z, W:GL.FLOAT);PROCEDURE VERTEX_F (X, Y, Z, W:GL.FLOAT)RENAMES VERTEX4F;
PROCEDURE VERTEX4I (X, Y, Z, W:GL.INT);PROCEDURE VERTEX (X, Y, Z, W:GL.INT)RENAMES VERTEX4I;PROCEDURE VERTEX4S (X, Y, Z, W:GL.SHORT);PROCEDURE VERTEX_S (X, Y, Z, W:GL.SHORT)RENAMES VERTEX4S;
PROCEDURE GLACCUM (OP:ACCUMENM;VALUE:GL.FLOAT);PROCEDURE ACCUM (OP:ACCUMENM;VALUE:GL.FLOAT)RENAMES GLACCUM;PROCEDURE GLCLEAR (MASK:BITFIELD);
PROCEDURE CLEAR (MASK:BITFIELD)RENAMES GLCLEAR;PROCEDURE GLVIEWPORT (X:GL.INT;Y:GL.INT;WIDTH:GL.SIZEI;HEIGHT:GL.SIZEI);PROCEDURE VIEWPORT (X:GL.INT;
Y:GL.INT;WIDTH:GL.SIZEI;HEIGHT:GL.SIZEI)RENAMES GLVIEWPORT;PRAGMA IMPORT (STDCALL, CLEARINDEX, "glClearIndex");PRAGMA IMPORT (STDCALL, CLEARCOLOR, "glClearColor");
PRAGMA IMPORT (STDCALL, GLCLEAR, "glClear");PRAGMA IMPORT (STDCALL, INDEXMASK, "glIndexMask");PRAGMA IMPORT (STDCALL, COLORMASK, "glColorMask");
PRAGMA IMPORT (STDCALL, ALPHAFUNC, "glAlphaFunc");PRAGMA IMPORT (STDCALL, BLENDFUNC, "glBlendFunc");PRAGMA IMPORT (STDCALL, LOGICOP, "glLogicOp");
PRAGMA IMPORT (STDCALL, CULLFACE, "glCullFace");PRAGMA IMPORT (STDCALL, FRONTFACE, "glFrontFace");PRAGMA IMPORT (STDCALL, POINTSIZE, "glPointSize");
PRAGMA IMPORT (STDCALL, LINEWIDTH, "glLineWidth");PRAGMA IMPORT (STDCALL, LINESTIPPLE, "glLineStipple");PRAGMA IMPORT (STDCALL, POLYGONMODE, "glPolygonMode");
PRAGMA IMPORT (STDCALL, POLYGONOFFSET, "glPolygonOffset");PRAGMA IMPORT (STDCALL, POLYGONSTIPPLE, "glPolygonStipple");PRAGMA IMPORT (STDCALL, GETPOLYGONSTIPPLE, "glGetPolygonStipple");
PRAGMA IMPORT (STDCALL, EDGEFLAG, "glEdgeFlag");PRAGMA IMPORT (STDCALL, EDGEFLAGV, "glEdgeFlagv");PRAGMA IMPORT (STDCALL, SCISSOR, "glScissor");
PRAGMA IMPORT (STDCALL, CLIPPLANE, "glClipPlane");PRAGMA IMPORT (STDCALL, GETCLIPPLANE, "glGetClipPlane");PRAGMA IMPORT (STDCALL, DRAWBUFFER, "glDrawBuffer");
PRAGMA IMPORT (STDCALL, READBUFFER, "glReadBuffer");PRAGMA IMPORT (STDCALL, ENABLE, "glEnable");PRAGMA IMPORT (STDCALL, DISABLE, "glDisable");PRAGMA IMPORT (STDCALL, ISENABLED, "glIsEnabled");
PRAGMA IMPORT (STDCALL, ENABLECLIENTSTATE, "glEnableClientState");PRAGMA IMPORT (STDCALL, DISABLECLIENTSTATE, "glDisableClientState");PRAGMA IMPORT (STDCALL, GETBOOLEANV, "glGetBooleanv");
PRAGMA IMPORT (STDCALL, GETDOUBLEV, "glGetDoublev");PRAGMA IMPORT (STDCALL, GETFLOATV, "glGetFloatv");PRAGMA IMPORT (STDCALL, GETINTEGERV, "glGetIntegerv");
PRAGMA IMPORT (STDCALL, PUSHATTRIB, "glPushAttrib");PRAGMA IMPORT (STDCALL, POPATTRIB, "glPopAttrib");PRAGMA IMPORT (STDCALL, PUSHCLIENTATTRIB, "glPushClientAttrib");
PRAGMA IMPORT (STDCALL, POPCLIENTATTRIB, "glPopClientAttrib");PRAGMA IMPORT (STDCALL, RENDERMODE, "glRenderMode");PRAGMA IMPORT (STDCALL, GETERROR, "glGetError");
PRAGMA IMPORT (STDCALL, GLGETSTRING, "glGetString");PRAGMA IMPORT (STDCALL, FINISH, "glFinish");PRAGMA IMPORT (STDCALL, FLUSH, "glFlush");PRAGMA IMPORT (STDCALL, HINT, "glHint");
PRAGMA IMPORT (STDCALL, CLEARDEPTH, "glClearDepth");PRAGMA IMPORT (STDCALL, DEPTHFUNC, "glDepthFunc");PRAGMA IMPORT (STDCALL, DEPTHMASK, "glDepthMask");
PRAGMA IMPORT (STDCALL, DEPTHRANGE, "glDepthRange");PRAGMA IMPORT (STDCALL, CLEARACCUM, "glClearAccum");PRAGMA IMPORT (STDCALL, GLACCUM, "glAccum");
PRAGMA IMPORT (STDCALL, MATRIXMODE, "glMatrixMode");PRAGMA IMPORT (STDCALL, ORTHO, "glOrtho");PRAGMA IMPORT (STDCALL, FRUSTUM, "glFrustum");PRAGMA IMPORT (STDCALL, GLVIEWPORT, "glViewport");
PRAGMA IMPORT (STDCALL, PUSHMATRIX, "glPushMatrix");PRAGMA IMPORT (STDCALL, POPMATRIX, "glPopMatrix");PRAGMA IMPORT (STDCALL, LOADIDENTITY, "glLoadIdentity");
PRAGMA IMPORT (STDCALL, LOADMATRIXD, "glLoadMatrixd");PRAGMA IMPORT (STDCALL, LOADMATRIXF, "glLoadMatrixf");PRAGMA IMPORT (STDCALL, MULTMATRIXD, "glMultMatrixd");
PRAGMA IMPORT (STDCALL, MULTMATRIXF, "glMultMatrixf");PRAGMA IMPORT (STDCALL, ROTATED, "glRotated");PRAGMA IMPORT (STDCALL, ROTATEF, "glRotatef");
PRAGMA IMPORT (STDCALL, SCALED, "glScaled");PRAGMA IMPORT (STDCALL, SCALEF, "glScalef");PRAGMA IMPORT (STDCALL, TRANSLATED, "glTranslated");PRAGMA IMPORT (STDCALL, TRANSLATEF, "glTranslatef");
PRAGMA IMPORT (STDCALL, ISLIST, "glIsList");PRAGMA IMPORT (STDCALL, DELETELISTS, "glDeleteLists");PRAGMA IMPORT (STDCALL, GENLISTS, "glGenLists");
PRAGMA IMPORT (STDCALL, NEWLIST, "glNewList");PRAGMA IMPORT (STDCALL, ENDLIST, "glEndList");PRAGMA IMPORT (STDCALL, CALLLIST, "glCallList");PRAGMA IMPORT (STDCALL, CALLLISTS, "glCallLists");
PRAGMA IMPORT (STDCALL, LISTBASE, "glListBase");PRAGMA IMPORT (STDCALL, GL_BEGIN, "glBegin");PRAGMA IMPORT (STDCALL, GL_END, "glEnd");PRAGMA IMPORT (STDCALL, VERTEX2D, "glVertex2d");
PRAGMA IMPORT (STDCALL, VERTEX2F, "glVertex2f");PRAGMA IMPORT (STDCALL, VERTEX2I, "glVertex2i");PRAGMA IMPORT (STDCALL, VERTEX2S, "glVertex2s");
PRAGMA IMPORT (STDCALL, VERTEX3D, "glVertex3d");PRAGMA IMPORT (STDCALL, VERTEX3F, "glVertex3f");PRAGMA IMPORT (STDCALL, VERTEX3I, "glVertex3i");
PRAGMA IMPORT (STDCALL, VERTEX3S, "glVertex3s");PRAGMA IMPORT (STDCALL, VERTEX4D, "glVertex4d");PRAGMA IMPORT (STDCALL, VERTEX4F, "glVertex4f");
PRAGMA IMPORT (STDCALL, VERTEX4I, "glVertex4i");PRAGMA IMPORT (STDCALL, VERTEX4S, "glVertex4s");PRAGMA IMPORT (STDCALL, VERTEX2DV, "glVertex2dv");
PRAGMA IMPORT (STDCALL, VERTEX2FV, "glVertex2fv");PRAGMA IMPORT (STDCALL, VERTEX2IV, "glVertex2iv");PRAGMA IMPORT (STDCALL, VERTEX2SV, "glVertex2sv");
PRAGMA IMPORT (STDCALL, VERTEX3DV, "glVertex3dv");PRAGMA IMPORT (STDCALL, VERTEX3FV, "glVertex3fv");PRAGMA IMPORT (STDCALL, VERTEX3IV, "glVertex3iv");
PRAGMA IMPORT (STDCALL, VERTEX3SV, "glVertex3sv");PRAGMA IMPORT (STDCALL, VERTEX4DV, "glVertex4dv");PRAGMA IMPORT (STDCALL, VERTEX4FV, "glVertex4fv");
PRAGMA IMPORT (STDCALL, VERTEX4IV, "glVertex4iv");PRAGMA IMPORT (STDCALL, VERTEX4SV, "glVertex4sv");PRAGMA IMPORT (STDCALL, NORMAL3B, "glNormal3b");
PRAGMA IMPORT (STDCALL, NORMAL3D, "glNormal3d");PRAGMA IMPORT (STDCALL, NORMAL3F, "glNormal3f");PRAGMA IMPORT (STDCALL, NORMAL3I, "glNormal3i");
PRAGMA IMPORT (STDCALL, NORMAL3S, "glNormal3s");PRAGMA IMPORT (STDCALL, NORMAL3BV, "glNormal3bv");PRAGMA IMPORT (STDCALL, NORMAL3DV, "glNormal3dv");
PRAGMA IMPORT (STDCALL, NORMAL3FV, "glNormal3fv");PRAGMA IMPORT (STDCALL, NORMAL3IV, "glNormal3iv");PRAGMA IMPORT (STDCALL, NORMAL3SV, "glNormal3sv");
PRAGMA IMPORT (STDCALL, INDEXD, "glIndexd");PRAGMA IMPORT (STDCALL, INDEXF, "glIndexf");PRAGMA IMPORT (STDCALL, INDEXI, "glIndexi");PRAGMA IMPORT (STDCALL, INDEXS, "glIndexs");
PRAGMA IMPORT (STDCALL, INDEXUB, "glIndexub");PRAGMA IMPORT (STDCALL, INDEXDV, "glIndexdv");PRAGMA IMPORT (STDCALL, INDEXFV, "glIndexfv");PRAGMA IMPORT (STDCALL, INDEXIV, "glIndexiv");
PRAGMA IMPORT (STDCALL, INDEXSV, "glIndexsv");PRAGMA IMPORT (STDCALL, INDEXUBV, "glIndexubv");PRAGMA IMPORT (STDCALL, COLOR3B, "glColor3b");PRAGMA IMPORT (STDCALL, COLOR3D, "glColor3d");
PRAGMA IMPORT (STDCALL, COLOR3F, "glColor3f");PRAGMA IMPORT (STDCALL, COLOR3I, "glColor3i");PRAGMA IMPORT (STDCALL, COLOR3S, "glColor3s");PRAGMA IMPORT (STDCALL, COLOR3UB, "glColor3ub");
PRAGMA IMPORT (STDCALL, COLOR3UI, "glColor3ui");PRAGMA IMPORT (STDCALL, COLOR3US, "glColor3us");PRAGMA IMPORT (STDCALL, COLOR4B, "glColor4b");PRAGMA IMPORT (STDCALL, COLOR4D, "glColor4d");
PRAGMA IMPORT (STDCALL, COLOR4F, "glColor4f");PRAGMA IMPORT (STDCALL, COLOR4I, "glColor4i");PRAGMA IMPORT (STDCALL, COLOR4S, "glColor4s");PRAGMA IMPORT (STDCALL, COLOR4UB, "glColor4ub");
PRAGMA IMPORT (STDCALL, COLOR4UI, "glColor4ui");PRAGMA IMPORT (STDCALL, COLOR4US, "glColor4us");PRAGMA IMPORT (STDCALL, COLOR3BV, "glColor3bv");
PRAGMA IMPORT (STDCALL, COLOR3DV, "glColor3dv");PRAGMA IMPORT (STDCALL, COLOR3FV, "glColor3fv");PRAGMA IMPORT (STDCALL, COLOR3IV, "glColor3iv");
PRAGMA IMPORT (STDCALL, COLOR3SV, "glColor3sv");PRAGMA IMPORT (STDCALL, COLOR3UBV, "glColor3ubv");PRAGMA IMPORT (STDCALL, COLOR3UIV, "glColor3uiv");
PRAGMA IMPORT (STDCALL, COLOR3USV, "glColor3usv");PRAGMA IMPORT (STDCALL, COLOR4BV, "glColor4bv");PRAGMA IMPORT (STDCALL, COLOR4DV, "glColor4dv");
PRAGMA IMPORT (STDCALL, COLOR4FV, "glColor4fv");PRAGMA IMPORT (STDCALL, COLOR4IV, "glColor4iv");PRAGMA IMPORT (STDCALL, COLOR4SV, "glColor4sv");
PRAGMA IMPORT (STDCALL, COLOR4UBV, "glColor4ubv");PRAGMA IMPORT (STDCALL, COLOR4UIV, "glColor4uiv");PRAGMA IMPORT (STDCALL, COLOR4USV, "glColor4usv");
PRAGMA IMPORT (STDCALL, TEXCOORD1D, "glTexCoord1d");PRAGMA IMPORT (STDCALL, TEXCOORD1F, "glTexCoord1f");PRAGMA IMPORT (STDCALL, TEXCOORD1I, "glTexCoord1i");
PRAGMA IMPORT (STDCALL, TEXCOORD1S, "glTexCoord1s");PRAGMA IMPORT (STDCALL, TEXCOORD2D, "glTexCoord2d");PRAGMA IMPORT (STDCALL, TEXCOORD2F, "glTexCoord2f");
PRAGMA IMPORT (STDCALL, TEXCOORD2I, "glTexCoord2i");PRAGMA IMPORT (STDCALL, TEXCOORD2S, "glTexCoord2s");PRAGMA IMPORT (STDCALL, TEXCOORD3D, "glTexCoord3d");
PRAGMA IMPORT (STDCALL, TEXCOORD3F, "glTexCoord3f");PRAGMA IMPORT (STDCALL, TEXCOORD3I, "glTexCoord3i");PRAGMA IMPORT (STDCALL, TEXCOORD3S, "glTexCoord3s");
PRAGMA IMPORT (STDCALL, TEXCOORD4D, "glTexCoord4d");PRAGMA IMPORT (STDCALL, TEXCOORD4F, "glTexCoord4f");PRAGMA IMPORT (STDCALL, TEXCOORD4I, "glTexCoord4i");
PRAGMA IMPORT (STDCALL, TEXCOORD4S, "glTexCoord4s");PRAGMA IMPORT (STDCALL, TEXCOORD1DV, "glTexCoord1dv");PRAGMA IMPORT (STDCALL, TEXCOORD1FV, "glTexCoord1fv");
PRAGMA IMPORT (STDCALL, TEXCOORD1IV, "glTexCoord1iv");PRAGMA IMPORT (STDCALL, TEXCOORD1SV, "glTexCoord1sv");PRAGMA IMPORT (STDCALL, TEXCOORD2DV, "glTexCoord2dv");
PRAGMA IMPORT (STDCALL, TEXCOORD2FV, "glTexCoord2fv");PRAGMA IMPORT (STDCALL, TEXCOORD2IV, "glTexCoord2iv");PRAGMA IMPORT (STDCALL, TEXCOORD2SV, "glTexCoord2sv");
PRAGMA IMPORT (STDCALL, TEXCOORD3DV, "glTexCoord3dv");PRAGMA IMPORT (STDCALL, TEXCOORD3FV, "glTexCoord3fv");PRAGMA IMPORT (STDCALL, TEXCOORD3IV, "glTexCoord3iv");
PRAGMA IMPORT (STDCALL, TEXCOORD3SV, "glTexCoord3sv");PRAGMA IMPORT (STDCALL, TEXCOORD4DV, "glTexCoord4dv");PRAGMA IMPORT (STDCALL, TEXCOORD4FV, "glTexCoord4fv");
PRAGMA IMPORT (STDCALL, TEXCOORD4IV, "glTexCoord4iv");PRAGMA IMPORT (STDCALL, TEXCOORD4SV, "glTexCoord4sv");PRAGMA IMPORT (STDCALL, RASTERPOS2D, "glRasterPos2d");
PRAGMA IMPORT (STDCALL, RASTERPOS2F, "glRasterPos2f");PRAGMA IMPORT (STDCALL, RASTERPOS2I, "glRasterPos2i");PRAGMA IMPORT (STDCALL, RASTERPOS2S, "glRasterPos2s");
PRAGMA IMPORT (STDCALL, RASTERPOS3D, "glRasterPos3d");PRAGMA IMPORT (STDCALL, RASTERPOS3F, "glRasterPos3f");PRAGMA IMPORT (STDCALL, RASTERPOS3I, "glRasterPos3i");
PRAGMA IMPORT (STDCALL, RASTERPOS3S, "glRasterPos3s");PRAGMA IMPORT (STDCALL, RASTERPOS4D, "glRasterPos4d");PRAGMA IMPORT (STDCALL, RASTERPOS4F, "glRasterPos4f");
PRAGMA IMPORT (STDCALL, RASTERPOS4I, "glRasterPos4i");PRAGMA IMPORT (STDCALL, RASTERPOS4S, "glRasterPos4s");PRAGMA IMPORT (STDCALL, RASTERPOS2DV, "glRasterPos2dv");
PRAGMA IMPORT (STDCALL, RASTERPOS2FV, "glRasterPos2fv");PRAGMA IMPORT (STDCALL, RASTERPOS2IV, "glRasterPos2iv");PRAGMA IMPORT (STDCALL, RASTERPOS2SV, "glRasterPos2sv");
PRAGMA IMPORT (STDCALL, RASTERPOS3DV, "glRasterPos3dv");PRAGMA IMPORT (STDCALL, RASTERPOS3FV, "glRasterPos3fv");PRAGMA IMPORT (STDCALL, RASTERPOS3IV, "glRasterPos3iv");
PRAGMA IMPORT (STDCALL, RASTERPOS3SV, "glRasterPos3sv");PRAGMA IMPORT (STDCALL, RASTERPOS4DV, "glRasterPos4dv");PRAGMA IMPORT (STDCALL, RASTERPOS4FV, "glRasterPos4fv");
PRAGMA IMPORT (STDCALL, RASTERPOS4IV, "glRasterPos4iv");PRAGMA IMPORT (STDCALL, RASTERPOS4SV, "glRasterPos4sv");PRAGMA IMPORT (STDCALL, RECTD, "glRectd");
PRAGMA IMPORT (STDCALL, RECTF, "glRectf");PRAGMA IMPORT (STDCALL, RECTI, "glRecti");PRAGMA IMPORT (STDCALL, RECTS, "glRects");PRAGMA IMPORT (STDCALL, RECTDV, "glRectdv");
PRAGMA IMPORT (STDCALL, RECTFV, "glRectfv");PRAGMA IMPORT (STDCALL, RECTIV, "glRectiv");PRAGMA IMPORT (STDCALL, RECTSV, "glRectsv");PRAGMA IMPORT (STDCALL, VERTEXPOINTER, "glVertexPointer");
PRAGMA IMPORT (STDCALL, NORMALPOINTER, "glNormalPointer");PRAGMA IMPORT (STDCALL, COLORPOINTER, "glColorPointer");PRAGMA IMPORT (STDCALL, INDEXPOINTER, "glIndexPointer");
PRAGMA IMPORT (STDCALL, TEXCOORDPOINTER, "glTexCoordPointer");PRAGMA IMPORT (STDCALL, EDGEFLAGPOINTER, "glEdgeFlagPointer");PRAGMA IMPORT (STDCALL, GETPOINTERV, "glGetPointerv");
PRAGMA IMPORT (STDCALL, ARRAYELEMENT, "glArrayElement");PRAGMA IMPORT (STDCALL, DRAWARRAYS, "glDrawArrays");PRAGMA IMPORT (STDCALL, DRAWELEMENTS, "glDrawElements");
PRAGMA IMPORT (STDCALL, INTERLEAVEDARRAYS, "GL.interleavedArrays");PRAGMA IMPORT (STDCALL, SHADEMODEL, "glShadeModel");PRAGMA IMPORT (STDCALL, LIGHTF, "glLightf");
PRAGMA IMPORT (STDCALL, LIGHTI, "glLighti");PRAGMA IMPORT (STDCALL, LIGHTFV, "glLightfv");PRAGMA IMPORT (STDCALL, LIGHTIV, "glLightiv");PRAGMA IMPORT (STDCALL, GETLIGHTFV, "glGetLightfv");
PRAGMA IMPORT (STDCALL, GETLIGHTIV, "glGetLightiv");PRAGMA IMPORT (STDCALL, LIGHTMODELF, "glLightModelf");PRAGMA IMPORT (STDCALL, LIGHTMODELI, "glLightModeli");
PRAGMA IMPORT (STDCALL, LIGHTMODELFV, "glLightModelfv");PRAGMA IMPORT (STDCALL, LIGHTMODELIV, "glLightModeliv");PRAGMA IMPORT (STDCALL, MATERIALF, "glMaterialf");
PRAGMA IMPORT (STDCALL, MATERIALI, "glMateriali");PRAGMA IMPORT (STDCALL, MATERIALFV, "glMaterialfv");PRAGMA IMPORT (STDCALL, MATERIALIV, "glMaterialiv");
PRAGMA IMPORT (STDCALL, GETMATERIALFV, "glGetMaterialfv");PRAGMA IMPORT (STDCALL, GETMATERIALIV, "glGetMaterialiv");PRAGMA IMPORT (STDCALL, COLORMATERIAL, "glColorMaterial");
PRAGMA IMPORT (STDCALL, PIXELZOOM, "glPixelZoom");PRAGMA IMPORT (STDCALL, PIXELSTOREF, "glPixelStoref");PRAGMA IMPORT (STDCALL, PIXELSTOREI, "glPixelStorei");
PRAGMA IMPORT (STDCALL, PIXELTRANSFERF, "glPixelTransferf");PRAGMA IMPORT (STDCALL, PIXELTRANSFERI, "glPixelTransferi");PRAGMA IMPORT (STDCALL, PIXELMAPFV, "glPixelMapfv");
PRAGMA IMPORT (STDCALL, PIXELMAPUIV, "glPixelMapuiv");PRAGMA IMPORT (STDCALL, PIXELMAPUSV, "glPixelMapusv");PRAGMA IMPORT (STDCALL, GETPIXELMAPFV, "glGetPixelMapfv");
PRAGMA IMPORT (STDCALL, GETPIXELMAPUIV, "glGetPixelMapuiv");PRAGMA IMPORT (STDCALL, GETPIXELMAPUSV, "glGetPixelMapusv");PRAGMA IMPORT (STDCALL, BITMAP, "glBitmap");
PRAGMA IMPORT (STDCALL, READPIXELS, "glReadPixels");PRAGMA IMPORT (STDCALL, DRAWPIXELS, "glDrawPixels");PRAGMA IMPORT (STDCALL, COPYPIXELS, "glCopyPixels");
PRAGMA IMPORT (STDCALL, STENCILFUNC, "glStencilFunc");PRAGMA IMPORT (STDCALL, STENCILMASK, "glStencilMask");PRAGMA IMPORT (STDCALL, STENCILOP, "glStencilOp");
PRAGMA IMPORT (STDCALL, CLEARSTENCIL, "glClearStencil");PRAGMA IMPORT (STDCALL, TEXGEND, "glTexGend");PRAGMA IMPORT (STDCALL, TEXGENF, "glTexGenf");
PRAGMA IMPORT (STDCALL, TEXGENI, "glTexGeni");PRAGMA IMPORT (STDCALL, TEXGENDV, "glTexGendv");PRAGMA IMPORT (STDCALL, TEXGENFV, "glTexGenfv");PRAGMA IMPORT (STDCALL, TEXGENIV, "glTexGeniv");
PRAGMA IMPORT (STDCALL, GETTEXGENDV, "glGetTexGendv");PRAGMA IMPORT (STDCALL, GETTEXGENFV, "glGetTexGenfv");PRAGMA IMPORT (STDCALL, GETTEXGENIV, "glGetTexGeniv");
PRAGMA IMPORT (STDCALL, TEXENVF, "glTexEnvf");PRAGMA IMPORT (STDCALL, TEXENVI, "glTexEnvi");PRAGMA IMPORT (STDCALL, TEXENVFV, "glTexEnvfv");PRAGMA IMPORT (STDCALL, TEXENVIV, "glTexEnviv");
PRAGMA IMPORT (STDCALL, GETTEXENVFV, "glGetTexEnvfv");PRAGMA IMPORT (STDCALL, GETTEXENVIV, "glGetTexEnviv");PRAGMA IMPORT (STDCALL, TEXPARAMETERF, "glTexParameterf");
PRAGMA IMPORT (STDCALL, TEXPARAMETERI, "glTexParameteri");PRAGMA IMPORT (STDCALL, TEXPARAMETERFV, "glTexParameterfv");PRAGMA IMPORT (STDCALL, TEXPARAMETERIV, "glTexParameteriv");
PRAGMA IMPORT (STDCALL, GETTEXPARAMETERFV, "glGetTexParameterfv");PRAGMA IMPORT (STDCALL, GETTEXPARAMETERIV, "glGetTexParameteriv");PRAGMA IMPORT (STDCALL, GETTEXLEVELPARAMETERFV, "glGetTexLevelParameterfv");
PRAGMA IMPORT (STDCALL, GETTEXLEVELPARAMETERIV, "glGetTexLevelParameteriv");PRAGMA IMPORT (STDCALL, TEXIMAGE1D, "glTexImage1D");PRAGMA IMPORT (STDCALL, TEXIMAGE2D, "glTexImage2D");
PRAGMA IMPORT (STDCALL, GETTEXIMAGE, "glGetTexImage");PRAGMA IMPORT (STDCALL, GENTEXTURES, "glGenTextures");PRAGMA IMPORT (STDCALL, DELETETEXTURES, "glDeleteTextures");
PRAGMA IMPORT (STDCALL, BINDTEXTURE, "glBindTexture");PRAGMA IMPORT (STDCALL, PRIORITIZETEXTURES, "glPrioritizeTextures");PRAGMA IMPORT (STDCALL, ARETEXTURESRESIDENT, "glAreTexturesResident");
PRAGMA IMPORT (STDCALL, ISTEXTURE, "glIsTexture");PRAGMA IMPORT (STDCALL, TEXSUBIMAGE1D, "glTexSubImage1D");PRAGMA IMPORT (STDCALL, TEXSUBIMAGE2D, "glTexSubImage2D");
PRAGMA IMPORT (STDCALL, COPYTEXIMAGE1D, "glCopyTexImage1D");PRAGMA IMPORT (STDCALL, COPYTEXIMAGE2D, "glCopyTexImage2D");PRAGMA IMPORT (STDCALL, COPYTEXSUBIMAGE1D, "glCopyTexSubImage1D");
PRAGMA IMPORT (STDCALL, COPYTEXSUBIMAGE2D, "glCopyTexSubImage2D");PRAGMA IMPORT (STDCALL, MAP1D, "glMap1d");PRAGMA IMPORT (STDCALL, MAP1F, "glMap1f");
PRAGMA IMPORT (STDCALL, MAP2D, "glMap2d");PRAGMA IMPORT (STDCALL, MAP2F, "glMap2f");PRAGMA IMPORT (STDCALL, GETMAPDV, "glGetMapdv");PRAGMA IMPORT (STDCALL, GETMAPFV, "glGetMapfv");
PRAGMA IMPORT (STDCALL, GETMAPIV, "glGetMapiv");PRAGMA IMPORT (STDCALL, EVALCOORD1D, "glEvalCoord1d");PRAGMA IMPORT (STDCALL, EVALCOORD1F, "glEvalCoord1f");
PRAGMA IMPORT (STDCALL, EVALCOORD1DV, "glEvalCoord1dv");PRAGMA IMPORT (STDCALL, EVALCOORD1FV, "glEvalCoord1fv");PRAGMA IMPORT (STDCALL, EVALCOORD2D, "glEvalCoord2d");
PRAGMA IMPORT (STDCALL, EVALCOORD2F, "glEvalCoord2f");PRAGMA IMPORT (STDCALL, EVALCOORD2DV, "glEvalCoord2dv");PRAGMA IMPORT (STDCALL, EVALCOORD2FV, "glEvalCoord2fv");
PRAGMA IMPORT (STDCALL, MAPGRID1D, "glMapGrid1d");PRAGMA IMPORT (STDCALL, MAPGRID1F, "glMapGrid1f");PRAGMA IMPORT (STDCALL, MAPGRID2D, "glMapGrid2d");
PRAGMA IMPORT (STDCALL, MAPGRID2F, "glMapGrid2f");PRAGMA IMPORT (STDCALL, EVALPOINT1, "glEvalPoint1");PRAGMA IMPORT (STDCALL, EVALPOINT2, "glEvalPoint2");
PRAGMA IMPORT (STDCALL, EVALMESH1, "glEvalMesh1");PRAGMA IMPORT (STDCALL, EVALMESH2, "glEvalMesh2");PRAGMA IMPORT (STDCALL, FOGF, "glFogf");PRAGMA IMPORT (STDCALL, FOGI, "glFogi");
PRAGMA IMPORT (STDCALL, FOGFV, "glFogfv");PRAGMA IMPORT (STDCALL, FOGIV, "glFogiv");PRAGMA IMPORT (STDCALL, FEEDBACKBUFFER, "glFeedbackBuffer");
PRAGMA IMPORT (STDCALL, PASSTHROUGH, "glPassThrough");PRAGMA IMPORT (STDCALL, SELECTBUFFER, "glSelectBuffer");PRAGMA IMPORT (STDCALL, INITNAMES, "glInitNames");
PRAGMA IMPORT (STDCALL, LOADNAME, "glLoadName");PRAGMA IMPORT (STDCALL, PUSHNAME, "glPushName");PRAGMA IMPORT (STDCALL, POPNAME, "glPopName");PRAGMA IMPORT (STDCALL, BLENDEQUATIONEXT, "glBlendEquationEXT");
PRAGMA IMPORT (STDCALL, BLENDCOLOREXT, "glBlendColorEXT");PRAGMA IMPORT (STDCALL, TEXIMAGE3DEXT, "glTexImage3DEXT");PRAGMA IMPORT (STDCALL, TEXSUBIMAGE3DEXT, "glTexSubImage3DEXT");
PRAGMA IMPORT (STDCALL, COPYTEXSUBIMAGE3DEXT, "glCopyTexSubImage3DEXT");PRAGMA IMPORT (STDCALL, COLORTABLEEXT, "glColorTableEXT");PRAGMA IMPORT (STDCALL, COLORSUBTABLEEXT, "glColorSubTableEXT");
PRAGMA IMPORT (STDCALL, GETCOLORTABLEEXT, "glGetColorTableEXT");PRAGMA IMPORT (STDCALL, GETCOLORTABLEPARAMETERFVEXT, "glGetColorTableParameterfvEXT");
PRAGMA IMPORT (STDCALL, GETCOLORTABLEPARAMETERIVEXT, "glGetColorTableParameterivEXT");PRAGMA IMPORT (STDCALL, POINTPARAMETERFEXT, "glPointParameterfEXT");
PRAGMA IMPORT (STDCALL, POINTPARAMETERFVEXT, "glPointParameterfvEXT");PRAGMA IMPORT (STDCALL, WINDOWPOS2IMESA, "glWindowPos2iMESA");PRAGMA IMPORT (STDCALL, WINDOWPOS2SMESA, "glWindowPos2sMESA");
PRAGMA IMPORT (STDCALL, WINDOWPOS2FMESA, "glWindowPos2fMESA");PRAGMA IMPORT (STDCALL, WINDOWPOS2DMESA, "glWindowPos2dMESA");PRAGMA IMPORT (STDCALL, WINDOWPOS2IVMESA, "glWindowPos2ivMESA");
PRAGMA IMPORT (STDCALL, WINDOWPOS2SVMESA, "glWindowPos2svMESA");PRAGMA IMPORT (STDCALL, WINDOWPOS2FVMESA, "glWindowPos2fvMESA");PRAGMA IMPORT (STDCALL, WINDOWPOS2DVMESA, "glWindowPos2dvMESA");
PRAGMA IMPORT (STDCALL, WINDOWPOS3IMESA, "glWindowPos3iMESA");PRAGMA IMPORT (STDCALL, WINDOWPOS3SMESA, "glWindowPos3sMESA");PRAGMA IMPORT (STDCALL, WINDOWPOS3FMESA, "glWindowPos3fMESA");
PRAGMA IMPORT (STDCALL, WINDOWPOS3DMESA, "glWindowPos3dMESA");PRAGMA IMPORT (STDCALL, WINDOWPOS3IVMESA, "glWindowPos3ivMESA");PRAGMA IMPORT (STDCALL, WINDOWPOS3SVMESA, "glWindowPos3svMESA");
PRAGMA IMPORT (STDCALL, WINDOWPOS3FVMESA, "glWindowPos3fvMESA");PRAGMA IMPORT (STDCALL, WINDOWPOS3DVMESA, "glWindowPos3dvMESA");PRAGMA IMPORT (STDCALL, WINDOWPOS4IMESA, "glWindowPos4iMESA");
PRAGMA IMPORT (STDCALL, WINDOWPOS4SMESA, "glWindowPos4sMESA");PRAGMA IMPORT (STDCALL, WINDOWPOS4FMESA, "glWindowPos4fMESA");PRAGMA IMPORT (STDCALL, WINDOWPOS4DMESA, "glWindowPos4dMESA");
PRAGMA IMPORT (STDCALL, WINDOWPOS4IVMESA, "glWindowPos4ivMESA");PRAGMA IMPORT (STDCALL, WINDOWPOS4SVMESA, "glWindowPos4svMESA");PRAGMA IMPORT (STDCALL, WINDOWPOS4FVMESA, "glWindowPos4fvMESA");
PRAGMA IMPORT (STDCALL, WINDOWPOS4DVMESA, "glWindowPos4dvMESA");PRAGMA IMPORT (STDCALL, RESIZEBUFFERSMESA, "glResizeBuffersMESA");PRAGMA CONVENTION (STDCALL, GENBUFFERS);
PRAGMA CONVENTION (STDCALL, DELETEBUFFERS);PRAGMA CONVENTION (STDCALL, BINDBUFFER);PRAGMA CONVENTION (STDCALL, BUFFERDATA);PRAGMA CONVENTION (STDCALL, BUFFERSUBDATA);
PRAGMA CONVENTION (STDCALL, MAPBUFFER);PRAGMA CONVENTION (STDCALL, UNMAPBUFFER);PRAGMA CONVENTION (STDCALL, GETBUFFERPARAMETER);END GL;
